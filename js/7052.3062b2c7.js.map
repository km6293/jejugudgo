{"version":3,"file":"js/7052.3062b2c7.js","mappings":"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","sources":["webpack://frontend/./src/apis/index.ts","webpack://frontend/./src/apis/courseFeature/course.ts","webpack://frontend/./src/apis/courseFeature/tmap.ts","webpack://frontend/./src/utils/iconMap.ts","webpack://frontend/./src/hooks/useMap.ts","webpack://frontend/./src/views/myWalk/WalkingTravel.vue?073d","webpack://frontend/./src/views/myWalk/WalkingTravel.vue","webpack://frontend/./src/views/myWalk/WalkingTravel.vue?4e9f"],"sourcesContent":["import axios from 'axios';\nimport { getCookie, setCookie } from '@/utils/cookies';\n\nconst axiosInstance = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  timeout: 1000,\n});\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const accessToken = getCookie('Authorization');\n    if (accessToken) {\n      config.headers['Authorization'] = `Bearer ${accessToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxiosInstance.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    if (\n      error.response &&\n      error.response.status === 401 &&\n      error.response.data?.errorCode === 'TOKEN_01' &&\n      !originalRequest._retry\n    ) {\n      originalRequest._retry = true;\n\n      try {\n        const response = await axios.post(\n          `${process.env.VUE_APP_BASE_API}/auth/token/refresh`,\n          null,\n          { withCredentials: true }\n        );\n        const accessToken = response.headers['authorization'];\n        setCookie('Authorization', accessToken);\n\n        axiosInstance.defaults.headers.common[\n          'Authorization'\n        ] = `Bearer ${accessToken}`;\n        originalRequest.headers['Authorization'] = `Bearer ${accessToken}`;\n\n        return axiosInstance(originalRequest);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n","import { ISpotType } from '@/stores/recommendedCourse/type';\nimport { getCookie } from '@/utils';\nimport axios from 'axios';\nimport axiosInstance from '..';\n\nconst handleAxiosError = (error: unknown) => {\n  const errorCode =\n    axios.isAxiosError(error) && error.response\n      ? error.response.data.errorCode\n      : null;\n  throw { originalError: error, errorCode };\n};\n\n// export const findRecommentSpot = async (\n//   latitude: number,\n//   longitude: number,\n//   contentTypeId: string\n// ) => {\n//   try {\n//     const accessToken = getCookie('Authorization');\n//     const url = `${process.env.VUE_APP_BASE_API}/api/v1/courses/tour/spots`;\n//     const data = { latitude, longitude, contentTypeId };\n//     // const data = {\n//     //   latitude: 33.5115624162,\n//     //   longitude: 126.5260587646,\n//     //   contentTypeId: '38',\n//     // };\n//     const response = await axios.post(url, data, {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${accessToken}`,\n//       },\n//     });\n\n//     return response.data;\n//   } catch (error) {\n//     handleAxiosError(error);\n//   }\n// };\n\nexport type IFindRecommentSpotResponse = {\n  id: string;\n  updatedAt: string;\n  latitude: number;\n  longitude: number;\n  title: string;\n  imageUrl: string;\n  content: string;\n};\n\nexport const findRecommentSpot = async (\n  latitude: number,\n  longitude: number,\n  contentTypeId: string\n) => {\n  try {\n    const accessToken = getCookie('Authorization');\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/courses/tour/spots`;\n    const data = {\n      latitude: 33.5115624162,\n      longitude: 126.5260587646,\n      contentTypeId: '14',\n    };\n\n    const response: {\n      data: Array<IFindRecommentSpotResponse>;\n    } = {\n      data: [\n        {\n          id: '1013246',\n          updatedAt: '20240510103332',\n          latitude: 126.5260587646,\n          longitude: 33.5115624162,\n          title: '동문재래시장',\n          imageUrl:\n            'http://tong.visitkorea.or.kr/cms/resource/86/3039486_image2_1.jpeg',\n          content:\n            '동문재래시장은 오랜 역사를  지닌 전통 재래시장으로 제주도를 대표하는 시장 중 하나이다. 동문재래수산시장과  더불어 제주도에서 가장 중요하면서 대규모의 상설 재래시장을 구성하고 있다. 1945년  8월 광복 직후 형성된 것이 시초인데, 이 시장은 당시 제주도의 유일한 상설시장으로  제주도 전체 상업 활동의 근거지가 되었다. 1954년 3월에 발생한 대형 화재로 시장  전체가 잿더미로 변하자 같은 해 11월 현재의 장소로 이전했다. 주요 취급 품목은  야채, 과일, 수산물, 약초, 곡물, 의류 등이 있다. 제주도의 대표 재래시장인 만큼 신선한 해산물이 인기다. 갈치회를 비롯한 다양한 모듬회를 저렴한 값에 구매할 수 있으며, 전복내장밥(게우밥) 삼합이나 통전복이 들어간 떡갈비 등 퓨전음식이 주목받고 있다.',\n        },\n        {\n          id: '1013289',\n          updatedAt: '20230423054547',\n          latitude: 126.5405800026,\n          longitude: 33.4993528886,\n          title: '제주 특산품전시판매장',\n          imageUrl:\n            'http://tong.visitkorea.or.kr/cms/resource/24/1031524_image2_1.jpg',\n          content:\n            '제주특별자치도가 도내중소기업들의 판로난을 해결하고 제주특산품의 통합마케팅을 위하여 제주도중소기업종합지원센터 1층에 마련한 매장입니다.제주원료를 갖고 제주에서 생산되는 특산품만을 한곳에 전시․판매하는 곳인 이곳에서는 현재 138개업체의 농,수,축산품, 가공식품, 공예,향장품(香粧品) 등 2,200여개 산품들이 입점되어 있으며 전국에서 단일지역특산품매장으로는 가장 큰규모이다. 생산자와의 직거래를 통한 저렴한 가격 , 구매고객을 위한 최상의 서비스, 소비자들이 신뢰할수 품질관리시스템을를 추구하고 온-오프라인 판매장을 연계하여 제주의 쇼핑명소로 거듭 나고 있다.',\n        },\n        {\n          id: '1014672',\n          updatedAt: '20230612154300',\n          latitude: 126.52466996,\n          longitude: 33.5131677726,\n          title: '제주 중앙지하상가',\n          imageUrl:\n            'http://tong.visitkorea.or.kr/cms/resource/58/1017258_image2_1.jpg',\n          content:\n            '제주시내 번화가인 중앙로에는 낡은 시설을 개.보수하여 새롭게 단장한 현대적인 지하아케이드가 조성되어 있다. 중앙로를 기점으로 서문로에서 동문로까지 잇는 지하 아케이드는 현재 300여 개의 점포가 들어서 있다. 주로 의류점이 많고 그 외 신발, 액세서리, 안경, 시계, 보석, 가방, 모자 등을 판매하는 상점들이 들어서 있으며 식당, 패스트푸드점 등과 중간, 중간에는 휴게 시설도 마련되어 고객의 쉼터도 자리잡고있다. 제주도 유일 지하상가이며 쾌적하고 가장 활발한 쇼핑 명소이다.',\n        },\n        {\n          id: '1862763',\n          updatedAt: '20230214164641',\n          latitude: 126.5213730415,\n          longitude: 33.512426135,\n          title: '더 아일랜더',\n          imageUrl:\n            'http://tong.visitkorea.or.kr/cms/resource/01/2558001_image2_1.JPG',\n          content:\n            '2013년 제주의 원도심에서 오픈하여 제주도 기념품을 판매하고 있는 더 아일랜더는 최근 2호점인 라이프스타일 스토어와 함께 하나의 공간에서 새롭게 영업을 하고 있다. 기존의 제주도 기념품 외에 다양한 디자인 소품을 만나 보실 수 있으며, 작은 카페 공간도 함께 운영 중 이다.',\n        },\n      ],\n    };\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const createCourse = async (\n  courseName: string,\n  visibilityStatus: boolean,\n  keyword: string[],\n  id: number,\n  startPoint: ISpotType,\n  wayPoint: ISpotType[],\n  endPoint: ISpotType\n) => {\n  try {\n    // const accessToken = getCookie('Authorization');\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/users/${id}/planners`;\n\n    const spotCreateRequestDto =\n      wayPoint.length > 0\n        ? [startPoint, ...wayPoint, endPoint]\n        : [startPoint, endPoint];\n\n    const data = {\n      title: courseName,\n      isPrivate: visibilityStatus,\n      tags: keyword,\n      courseCreateRequestDto: {\n        type: 'USER',\n        title: courseName,\n        userId: id,\n      },\n      spotCreateRequestDto,\n    };\n\n    const response = await axiosInstance.post(url, data);\n    return response.data;\n\n    // const response = await axios.post(url, data, {\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //     Authorization: `Bearer ${accessToken}`,\n    //   },\n    // });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const searchCourse = async (\n  latitude = 0.1,\n  longitude = 0.1,\n  query = '',\n  category1 = '',\n  category2 = '',\n  category3 = ''\n) => {\n  try {\n    const url = `http://localhost:8080/api/v1/search?latitude=${latitude}&longitude=${longitude}&query=${encodeURIComponent(\n      query\n    )}&category1=${encodeURIComponent(\n      category1\n    )}&category2=${encodeURIComponent(\n      category2\n    )}&category3=${encodeURIComponent(category3)}`;\n\n    console.log('Request URL:', url);\n    const response = await axiosInstance.get(url);\n    return response.data;\n\n    return response.data;\n  } catch (error) {\n    console.error('Error occurred:', error);\n    handleAxiosError(error);\n  }\n};\n","import axios from 'axios';\n\nexport const requestRoute = async (\n  startX: string,\n  startY: string,\n  endX: string,\n  endY: string,\n  passList?: string,\n  startName = '출발지',\n  endName = '도착지'\n) => {\n  const headers = {\n    appKey: process.env.VUE_APP_MAP_API,\n  };\n\n  try {\n    const data: Record<string, any> = {\n      startX,\n      startY,\n      endX,\n      endY,\n      reqCoordType: 'WGS84GEO',\n      resCoordType: 'EPSG3857',\n      startName,\n      endName,\n    };\n\n    if (passList && passList.trim() !== '') {\n      data.passList = passList;\n    }\n\n    const response = await axios.post(\n      'https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json',\n      data,\n      { headers }\n    );\n\n    return response.data.features;\n  } catch (error) {\n    console.error('경로를 가져오는 중 오류 발생:', error);\n    throw error;\n  }\n};\n\nexport const getReverseGeocoding = async (\n  latitude: number,\n  longitude: number\n): Promise<string> => {\n  try {\n    const response = await axios.get(\n      `https://apis.openapi.sk.com/tmap/geo/reversegeocoding?version=1&lat=${latitude}&lon=${longitude}&format=json&appKey=${process.env.VUE_APP_MAP_API}`\n    );\n    const data = response.data;\n    const address = data?.addressInfo?.fullAddress || '';\n\n    return address;\n  } catch (error) {\n    console.error('Reverse Geocoding 에러:', error);\n    throw error;\n  }\n};\n\nexport const searchPlaces = async (keyword: string) => {\n  const headers = {\n    appKey: process.env.VUE_APP_MAP_API, // TMap API 키\n  };\n\n  try {\n    const response = await axios.get(\n      `https://apis.openapi.sk.com/tmap/pois?version=1&format=json&searchKeyword=${encodeURIComponent(\n        keyword\n      )}&resCoordType=WGS84GEO&reqCoordType=WGS84GEO&count=10`,\n      { headers }\n    );\n\n    return response.data.searchPoiInfo.pois.poi.map((poi: any) => ({\n      name: poi.name,\n      latitude: poi.frontLat,\n      longitude: poi.frontLon,\n      address: poi.newAddressList.newAddress[0]?.fullAddress || poi.address,\n    }));\n  } catch (error) {\n    console.error('장소 검색 중 오류 발생:', error);\n    throw error;\n  }\n};\n","import course from '@/assets/icon/course.svg';\nimport end from '@/assets/icon/end.svg';\nimport location from '@/assets/icon/location.svg';\nimport now from '@/assets/icon/now.svg';\nimport start from '@/assets/icon/start.svg';\n\nexport type IGubunType = 'start' | 'end' | 'location' | 'course' | 'now';\nexport const iconMap = {\n  course,\n  location,\n  now,\n  start,\n  end,\n};\n","import { requestRoute } from '@/apis/courseFeature';\nimport { iconMap, IGubunType } from '@/utils/iconMap';\nimport { ISpotType } from '@/stores/recommendedCourse/type';\nimport { findNowLocation } from '@/utils/map';\n\nexport const useMap = (map: any) => {\n  let drawInfoArr: any[] = [];\n  let resultdrawArr: any[] = [];\n  let markers: any[] = [];\n\n  const Tmapv2 = (window as any).Tmapv2;\n\n  const adjustZoomLevelToFitRoute = (drawInfoArr: any[]) => {\n    if (drawInfoArr.length > 0) {\n      const bounds = new Tmapv2.LatLngBounds();\n\n      drawInfoArr.forEach((point: any) => {\n        bounds.extend(point);\n      });\n\n      map.value.fitBounds(bounds);\n    } else {\n      console.error('Zoom 조정할 경로 데이터가 부족합니다.');\n    }\n  };\n\n  const createPolylineSegment = (\n    segmentPath: any[],\n    color: string,\n    weight: number\n  ) => {\n    return new Tmapv2.Polyline({\n      path: segmentPath,\n      strokeColor: color,\n      strokeWeight: weight,\n      fillOpacity: 1.0,\n      map: map.value,\n      direction: true,\n      directionColor: 'white',\n    });\n  };\n\n  const clearRoute = () => {\n    if (resultdrawArr.length > 0) {\n      resultdrawArr.forEach((line) => {\n        if (line && typeof line.setVisible === 'function') {\n          line.setVisible(false);\n        }\n      });\n      resultdrawArr = [];\n    }\n  };\n\n  const clearMarkers = () => {\n    markers.forEach((marker) => marker.setMap(null));\n    markers = [];\n  };\n\n  const drawLine = (arrPoint: any[]) => {\n    const totalPoints = arrPoint.length;\n    const SEGMENT_WEIGHTS = 10;\n    const SEGMENT_COLORS = [\n      '#75FFA5',\n      '#22F779',\n      '#13D168',\n      '#07AB56',\n      '#008545',\n    ];\n\n    SEGMENT_COLORS.forEach((color, index) => {\n      const start = Math.floor(totalPoints * (index * 0.2));\n      const end = Math.floor(totalPoints * ((index + 1) * 0.2));\n\n      const segmentPath = arrPoint.slice(start, end + 1);\n      const polyline = createPolylineSegment(\n        segmentPath,\n        color,\n        SEGMENT_WEIGHTS\n      );\n\n      resultdrawArr.push(polyline);\n    });\n\n    adjustZoomLevelToFitRoute(arrPoint);\n  };\n\n  const requestLocationPermission = () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            resolve(position);\n          },\n          (error) => {\n            if (error.code === error.PERMISSION_DENIED) {\n              alert(\n                '위치 권한이 거부되었습니다. 앱 설정에서 권한을 허용해 주세요.'\n              );\n              reject('위치 권한이 거부되었습니다.');\n            } else {\n              reject('위치를 가져오는 데 실패했습니다.');\n            }\n          }\n        );\n      } else {\n        reject('이 브라우저는 위치 서비스를 지원하지 않습니다.');\n      }\n    });\n  };\n\n  const initTmap = (map: any) => {\n    return new Promise<void>((resolve, reject) => {\n      if (!map.value) {\n        map.value = new Tmapv2.Map('map_div', {\n          width: '100%',\n          height: '100%',\n          zoom: 15,\n          scaleBar: false,\n          zoomControl: false,\n          httpsMode: true,\n        });\n        resolve();\n      } else {\n        reject('지도 객체 초기화 실패: 이미 초기화된 상태입니다.');\n      }\n    });\n  };\n\n  const removeMarker = (location: ISpotType) => {\n    const { latitude, longitude } = location;\n    if (!map.value || latitude === 0 || longitude === 0) return;\n\n    const markerIndex = markers.findIndex(\n      (marker) =>\n        marker.getPosition().lat() === latitude &&\n        marker.getPosition().lng() === longitude\n    );\n\n    if (markerIndex !== -1) {\n      markers[markerIndex].setMap(null);\n      markers.splice(markerIndex, 1);\n    } else {\n      console.log('해당 위치에 마커가 없습니다.');\n    }\n  };\n\n  const checkDuplMarker = (location: ISpotType): boolean => {\n    const { latitude, longitude } = location;\n    if (!latitude || !longitude || !map.value) return false;\n\n    return markers.some(\n      (marker) =>\n        marker.getPosition().lat() === latitude &&\n        marker.getPosition().lng() === longitude\n    );\n  };\n\n  const addMarker = (location: ISpotType, gubun: IGubunType) => {\n    const { latitude, longitude } = location;\n    if (!map.value || latitude === 0 || longitude === 0) return;\n\n    const markerPosition = new Tmapv2.LatLng(latitude, longitude);\n    const marker = new Tmapv2.Marker({\n      position: markerPosition,\n      icon: iconMap[gubun],\n      map: map.value,\n    });\n\n    markers.push(marker);\n    return marker;\n  };\n\n  const searchRoutes = async (\n    startLocation: ISpotType,\n    endLocation: ISpotType,\n    passList?: ISpotType[]\n  ) => {\n    try {\n      clearRoute();\n\n      const passListString = passList\n        ? passList\n            .map((point) => `${point.longitude},${point.latitude}`)\n            .join('_')\n        : '';\n\n      const resultData = await requestRoute(\n        String(startLocation.longitude),\n        String(startLocation.latitude),\n        String(endLocation.longitude),\n        String(endLocation.latitude),\n        passListString\n      );\n\n      drawInfoArr = [];\n\n      resultData.forEach((data: any) => {\n        const geometry = data.geometry;\n        const properties = data.properties;\n\n        if (geometry.type === 'LineString') {\n          geometry.coordinates.forEach((coord: any) => {\n            const latlng = new Tmapv2.Point(coord[0], coord[1]);\n            const convertPoint =\n              Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng);\n            const convertChange = new Tmapv2.LatLng(\n              convertPoint._lat,\n              convertPoint._lng\n            );\n            drawInfoArr.push(convertChange);\n          });\n        }\n      });\n\n      drawLine(drawInfoArr);\n    } catch (error) {\n      console.error('경로 검색 중 오류 발생:', error);\n    }\n  };\n\n  const searchRoutesTest = async (map: any) => {\n    const startLocation: [number, number] = [\n      33.433944015499456, 126.43602130714433,\n    ];\n    const endLocation: [number, number] = [\n      33.45120886113757, 126.48765563964844,\n    ];\n    const passList =\n      '126.39573248492509,33.47190207955216_126.44226001173622,33.47486469122896_126.42766879469521,33.48001928930712';\n\n    try {\n      const resultData = await requestRoute(\n        String(startLocation[1]),\n        String(startLocation[0]),\n        String(endLocation[1]),\n        String(endLocation[0]),\n        passList\n      );\n\n      if (resultdrawArr.length > 0) {\n        resultdrawArr.forEach((line) => line.setMap(null));\n        resultdrawArr = [];\n      }\n\n      drawInfoArr = [];\n\n      resultData.forEach((data: any) => {\n        const geometry = data.geometry;\n        const properties = data.properties;\n\n        if (geometry.type === 'LineString') {\n          geometry.coordinates.forEach((coord: any) => {\n            const latlng = new Tmapv2.Point(coord[0], coord[1]);\n            const convertPoint =\n              Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng);\n            const convertChange = new Tmapv2.LatLng(\n              convertPoint._lat,\n              convertPoint._lng\n            );\n            drawInfoArr.push(convertChange);\n          });\n        } else if (\n          properties.pointType !== 'GP' &&\n          properties.pointType.includes('PP')\n        ) {\n          const latlon = new Tmapv2.Point(\n            geometry.coordinates[0],\n            geometry.coordinates[1]\n          );\n          const convertPoint =\n            Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlon);\n\n          new Tmapv2.Marker({\n            position: new Tmapv2.LatLng(convertPoint._lat, convertPoint._lng),\n            icon: iconMap['location'],\n            map: map.value,\n          });\n        }\n      });\n      drawLine(drawInfoArr);\n    } catch (error) {\n      console.error('경로 검색 중 오류 발생:', error);\n    }\n  };\n\n  const moveLocation = (latitude: number, longitude: number) => {\n    if (!map.value) return;\n\n    if (!isNaN(latitude) && !isNaN(longitude)) {\n      const currentLocation = new Tmapv2.LatLng(latitude, longitude);\n      map.value.setCenter(currentLocation);\n      map.value.setZoom(15);\n    } else {\n      console.error('유효하지 않은 좌표:', latitude, longitude);\n    }\n  };\n\n  const moveNowLocation = async () => {\n    try {\n      const position: any = await requestLocationPermission();\n      const { latitude, longitude } = position.coords;\n\n      const markerPosition = new Tmapv2.LatLng(latitude, longitude);\n      new Tmapv2.Marker({\n        position: markerPosition,\n        icon: iconMap['now'],\n        map: map.value,\n      });\n\n      moveLocation(latitude, longitude);\n    } catch (error) {\n      console.error(error);\n      alert('현재 위치를 가져오는 데 실패했습니다.');\n\n      const defaultLatitude = 33.50712081595116;\n      const defaultLongitude = 126.49340629577637;\n      moveLocation(defaultLatitude, defaultLongitude);\n    }\n  };\n\n  return {\n    initTmap,\n    removeMarker,\n    searchRoutes,\n    addMarker,\n    clearMarkers,\n    checkDuplMarker,\n    moveLocation,\n    moveNowLocation,\n    searchRoutesTest,\n  };\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-313b6b8b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { id: \"map_div\" }, null, -1))\n\nimport { TopBar } from './components';\r\nimport { onMounted, ref } from 'vue';\r\nimport { useMap } from '@/hooks';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'WalkingTravel',\n  setup(__props) {\n\r\nconst map = ref<any>(null);\r\nconst { initTmap, addMarker, moveNowLocation } = useMap(map);\r\n\r\nonMounted(async () => {\r\n  await initTmap(map);\r\n  await moveNowLocation();\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_unref(TopBar), null, {\n      center: _withCtx(() => [\n        _createTextVNode(\" 나의 걷기 기록 \")\n      ]),\n      right: _withCtx(() => []),\n      _: 1\n    }),\n    _hoisted_2\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"container\">\r\n    <TopBar>\r\n      <template #center> 나의 걷기 기록 </template>\r\n      <template #right></template>\r\n    </TopBar>\r\n    <div id=\"map_div\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { TopBar } from './components';\r\nimport { onMounted, ref } from 'vue';\r\nimport { useMap } from '@/hooks';\r\n\r\nconst map = ref<any>(null);\r\nconst { initTmap, addMarker, moveNowLocation } = useMap(map);\r\n\r\nonMounted(async () => {\r\n  await initTmap(map);\r\n  await moveNowLocation();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n</style>\r\n","import script from \"./WalkingTravel.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./WalkingTravel.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./WalkingTravel.vue?vue&type=style&index=0&id=313b6b8b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-313b6b8b\"]])\n\nexport default __exports__"],"names":["axiosInstance","axios","create","baseURL","process","timeout","interceptors","request","use","config","accessToken","getCookie","headers","error","Promise","reject","response","async","originalRequest","status","data","errorCode","_retry","post","withCredentials","setCookie","defaults","common","e","handleAxiosError","isAxiosError","originalError","findRecommentSpot","latitude","longitude","contentTypeId","id","updatedAt","title","imageUrl","content","requestRoute","startX","startY","endX","endY","passList","startName","endName","appKey","reqCoordType","resCoordType","trim","features","console","getReverseGeocoding","get","address","addressInfo","fullAddress","searchPlaces","encodeURIComponent","keyword","searchPoiInfo","pois","poi","map","name","frontLat","frontLon","newAddressList","newAddress","iconMap","course","location","now","start","end","useMap","drawInfoArr","resultdrawArr","markers","Tmapv2","window","adjustZoomLevelToFitRoute","length","bounds","LatLngBounds","forEach","point","extend","value","fitBounds","createPolylineSegment","segmentPath","color","weight","Polyline","path","strokeColor","strokeWeight","fillOpacity","direction","directionColor","clearRoute","line","setVisible","clearMarkers","marker","setMap","drawLine","arrPoint","totalPoints","SEGMENT_WEIGHTS","SEGMENT_COLORS","index","Math","floor","slice","polyline","push","requestLocationPermission","resolve","navigator","geolocation","getCurrentPosition","position","code","PERMISSION_DENIED","alert","initTmap","Map","width","height","zoom","scaleBar","zoomControl","httpsMode","removeMarker","markerIndex","findIndex","getPosition","lat","lng","splice","log","checkDuplMarker","some","addMarker","gubun","markerPosition","LatLng","Marker","icon","searchRoutes","startLocation","endLocation","passListString","join","resultData","String","geometry","properties","type","coordinates","coord","latlng","Point","convertPoint","Projection","convertEPSG3857ToWGS84GEO","convertChange","_lat","_lng","searchRoutesTest","pointType","includes","latlon","moveLocation","isNaN","currentLocation","setCenter","setZoom","moveNowLocation","coords","defaultLatitude","defaultLongitude","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_defineComponent","__name","setup","__props","ref","onMounted","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","TopBar","center","_withCtx","_createTextVNode","right","_","__exports__"],"sourceRoot":""}