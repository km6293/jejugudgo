{"version":3,"file":"js/4187.50bc91c1.js","mappings":"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","sources":["webpack://frontend/./src/apis/courseFeature/tmap.ts","webpack://frontend/./src/utils/iconMap.ts","webpack://frontend/./src/hooks/useMap.ts","webpack://frontend/./src/views/searchCourse/SearchCourse.vue?56ca","webpack://frontend/./src/views/searchCourse/SearchCourse.vue","webpack://frontend/./src/views/searchCourse/SearchCourse.vue?4475"],"sourcesContent":["import axios from 'axios';\n\nexport const requestRoute = async (\n  startX: string,\n  startY: string,\n  endX: string,\n  endY: string,\n  passList?: string,\n  startName = '출발지',\n  endName = '도착지'\n) => {\n  const headers = {\n    appKey: process.env.VUE_APP_MAP_API,\n  };\n\n  try {\n    const data: Record<string, any> = {\n      startX,\n      startY,\n      endX,\n      endY,\n      reqCoordType: 'WGS84GEO',\n      resCoordType: 'EPSG3857',\n      startName,\n      endName,\n    };\n\n    if (passList && passList.trim() !== '') {\n      data.passList = passList;\n    }\n\n    const response = await axios.post(\n      'https://apis.openapi.sk.com/tmap/routes/pedestrian?version=1&format=json',\n      data,\n      { headers }\n    );\n\n    return response.data.features;\n  } catch (error) {\n    console.error('경로를 가져오는 중 오류 발생:', error);\n    throw error;\n  }\n};\n\nexport const getReverseGeocoding = async (\n  latitude: number,\n  longitude: number\n): Promise<string> => {\n  try {\n    const response = await axios.get(\n      `https://apis.openapi.sk.com/tmap/geo/reversegeocoding?version=1&lat=${latitude}&lon=${longitude}&format=json&appKey=${process.env.VUE_APP_MAP_API}`\n    );\n    const data = response.data;\n    const address = data?.addressInfo?.fullAddress || '';\n\n    return address;\n  } catch (error) {\n    console.error('Reverse Geocoding 에러:', error);\n    throw error;\n  }\n};\n","import course from '@/assets/icon/course.svg';\nimport end from '@/assets/icon/end.svg';\nimport location from '@/assets/icon/location.svg';\nimport now from '@/assets/icon/now.svg';\nimport start from '@/assets/icon/start.svg';\n\nexport type IGubunType = 'start' | 'end' | 'location' | 'course' | 'now';\nexport const iconMap = {\n  course,\n  location,\n  now,\n  start,\n  end,\n};\n","import { requestRoute } from '@/apis/courseFeature';\nimport { iconMap, IGubunType } from '@/utils/iconMap';\nimport { ISpotType } from '@/stores/recommendedCourse/type';\nimport { findNowLocation } from '@/utils/map';\n\nexport const useMap = (map: any) => {\n  let drawInfoArr: any[] = [];\n  let resultdrawArr: any[] = [];\n  let markers: any[] = [];\n\n  const Tmapv2 = (window as any).Tmapv2;\n\n  const adjustZoomLevelToFitRoute = (drawInfoArr: any[]) => {\n    if (drawInfoArr.length > 0) {\n      const bounds = new Tmapv2.LatLngBounds();\n\n      drawInfoArr.forEach((point: any) => {\n        bounds.extend(point);\n      });\n\n      map.value.fitBounds(bounds);\n    } else {\n      console.error('Zoom 조정할 경로 데이터가 부족합니다.');\n    }\n  };\n\n  const createPolylineSegment = (\n    segmentPath: any[],\n    color: string,\n    weight: number\n  ) => {\n    return new Tmapv2.Polyline({\n      path: segmentPath,\n      strokeColor: color,\n      strokeWeight: weight,\n      fillOpacity: 1.0,\n      map: map.value,\n      direction: true,\n      directionColor: 'white',\n    });\n  };\n\n  const clearRoute = () => {\n    if (resultdrawArr.length > 0) {\n      resultdrawArr.forEach((line) => {\n        if (line && typeof line.setVisible === 'function') {\n          line.setVisible(false);\n        }\n      });\n      resultdrawArr = [];\n    }\n  };\n\n  const clearMarkers = () => {\n    markers.forEach((marker) => marker.setMap(null));\n    markers = [];\n  };\n\n  const drawLine = (arrPoint: any[]) => {\n    const totalPoints = arrPoint.length;\n    const SEGMENT_WEIGHTS = 10;\n    const SEGMENT_COLORS = [\n      '#75FFA5',\n      '#22F779',\n      '#13D168',\n      '#07AB56',\n      '#008545',\n    ];\n\n    SEGMENT_COLORS.forEach((color, index) => {\n      const start = Math.floor(totalPoints * (index * 0.2));\n      const end = Math.floor(totalPoints * ((index + 1) * 0.2));\n\n      const segmentPath = arrPoint.slice(start, end + 1);\n      const polyline = createPolylineSegment(\n        segmentPath,\n        color,\n        SEGMENT_WEIGHTS\n      );\n\n      resultdrawArr.push(polyline);\n    });\n\n    adjustZoomLevelToFitRoute(arrPoint);\n  };\n\n  const requestLocationPermission = () => {\n    return new Promise((resolve, reject) => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            resolve(position);\n          },\n          (error) => {\n            if (error.code === error.PERMISSION_DENIED) {\n              alert(\n                '위치 권한이 거부되었습니다. 앱 설정에서 권한을 허용해 주세요.'\n              );\n              reject('위치 권한이 거부되었습니다.');\n            } else {\n              reject('위치를 가져오는 데 실패했습니다.');\n            }\n          }\n        );\n      } else {\n        reject('이 브라우저는 위치 서비스를 지원하지 않습니다.');\n      }\n    });\n  };\n\n  const initTmap = (map: any) => {\n    return new Promise<void>((resolve, reject) => {\n      if (!map.value) {\n        map.value = new Tmapv2.Map('map_div', {\n          width: '100%',\n          height: '100%',\n          zoom: 15,\n          scaleBar: false,\n          zoomControl: false,\n          httpsMode: true,\n        });\n        resolve();\n      } else {\n        reject('지도 객체 초기화 실패: 이미 초기화된 상태입니다.');\n      }\n    });\n  };\n\n  const removeMarker = (location: ISpotType) => {\n    const { latitude, longitude } = location;\n    if (!map.value || latitude === 0 || longitude === 0) return;\n\n    const markerIndex = markers.findIndex(\n      (marker) =>\n        marker.getPosition().lat() === latitude &&\n        marker.getPosition().lng() === longitude\n    );\n\n    if (markerIndex !== -1) {\n      markers[markerIndex].setMap(null);\n      markers.splice(markerIndex, 1);\n    } else {\n      console.log('해당 위치에 마커가 없습니다.');\n    }\n  };\n\n  const checkDuplMarker = (location: ISpotType): boolean => {\n    const { latitude, longitude } = location;\n    if (!latitude || !longitude || !map.value) return false;\n\n    return markers.some(\n      (marker) =>\n        marker.getPosition().lat() === latitude &&\n        marker.getPosition().lng() === longitude\n    );\n  };\n\n  const addMarker = (location: ISpotType, gubun: IGubunType) => {\n    const { latitude, longitude } = location;\n    if (!map.value || latitude === 0 || longitude === 0) return;\n\n    const markerPosition = new Tmapv2.LatLng(latitude, longitude);\n    const marker = new Tmapv2.Marker({\n      position: markerPosition,\n      icon: iconMap[gubun],\n      map: map.value,\n    });\n\n    markers.push(marker);\n    return marker;\n  };\n\n  const searchRoutes = async (\n    startLocation: ISpotType,\n    endLocation: ISpotType,\n    passList?: ISpotType[]\n  ) => {\n    try {\n      clearRoute();\n\n      const passListString = passList\n        ? passList\n            .map((point) => `${point.longitude},${point.latitude}`)\n            .join('_')\n        : '';\n\n      const resultData = await requestRoute(\n        String(startLocation.longitude),\n        String(startLocation.latitude),\n        String(endLocation.longitude),\n        String(endLocation.latitude),\n        passListString\n      );\n\n      drawInfoArr = [];\n\n      resultData.forEach((data: any) => {\n        const geometry = data.geometry;\n        const properties = data.properties;\n\n        if (geometry.type === 'LineString') {\n          geometry.coordinates.forEach((coord: any) => {\n            const latlng = new Tmapv2.Point(coord[0], coord[1]);\n            const convertPoint =\n              Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng);\n            const convertChange = new Tmapv2.LatLng(\n              convertPoint._lat,\n              convertPoint._lng\n            );\n            drawInfoArr.push(convertChange);\n          });\n        }\n      });\n\n      drawLine(drawInfoArr);\n    } catch (error) {\n      console.error('경로 검색 중 오류 발생:', error);\n    }\n  };\n\n  const searchRoutesTest = async (map: any) => {\n    const startLocation: [number, number] = [\n      33.433944015499456, 126.43602130714433,\n    ];\n    const endLocation: [number, number] = [\n      33.45120886113757, 126.48765563964844,\n    ];\n    const passList =\n      '126.39573248492509,33.47190207955216_126.44226001173622,33.47486469122896_126.42766879469521,33.48001928930712';\n\n    try {\n      const resultData = await requestRoute(\n        String(startLocation[1]),\n        String(startLocation[0]),\n        String(endLocation[1]),\n        String(endLocation[0]),\n        passList\n      );\n\n      if (resultdrawArr.length > 0) {\n        resultdrawArr.forEach((line) => line.setMap(null));\n        resultdrawArr = [];\n      }\n\n      drawInfoArr = [];\n\n      resultData.forEach((data: any) => {\n        const geometry = data.geometry;\n        const properties = data.properties;\n\n        if (geometry.type === 'LineString') {\n          geometry.coordinates.forEach((coord: any) => {\n            const latlng = new Tmapv2.Point(coord[0], coord[1]);\n            const convertPoint =\n              Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng);\n            const convertChange = new Tmapv2.LatLng(\n              convertPoint._lat,\n              convertPoint._lng\n            );\n            drawInfoArr.push(convertChange);\n          });\n        } else if (\n          properties.pointType !== 'GP' &&\n          properties.pointType.includes('PP')\n        ) {\n          const latlon = new Tmapv2.Point(\n            geometry.coordinates[0],\n            geometry.coordinates[1]\n          );\n          const convertPoint =\n            Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlon);\n\n          new Tmapv2.Marker({\n            position: new Tmapv2.LatLng(convertPoint._lat, convertPoint._lng),\n            icon: iconMap['location'],\n            map: map.value,\n          });\n        }\n      });\n      drawLine(drawInfoArr);\n    } catch (error) {\n      console.error('경로 검색 중 오류 발생:', error);\n    }\n  };\n\n  const moveLocation = (latitude: number, longitude: number) => {\n    if (!map.value) return;\n\n    if (!isNaN(latitude) && !isNaN(longitude)) {\n      const currentLocation = new Tmapv2.LatLng(latitude, longitude);\n      map.value.setCenter(currentLocation);\n      map.value.setZoom(15);\n    } else {\n      console.error('유효하지 않은 좌표:', latitude, longitude);\n    }\n  };\n\n  const moveNowLocation = async () => {\n    try {\n      const position: any = await requestLocationPermission();\n      const { latitude, longitude } = position.coords;\n\n      const markerPosition = new Tmapv2.LatLng(latitude, longitude);\n      new Tmapv2.Marker({\n        position: markerPosition,\n        icon: iconMap['now'],\n        map: map.value,\n      });\n\n      moveLocation(latitude, longitude);\n    } catch (error) {\n      console.error(error);\n      alert('현재 위치를 가져오는 데 실패했습니다.');\n\n      const defaultLatitude = 33.50712081595116;\n      const defaultLongitude = 126.49340629577637;\n      moveLocation(defaultLatitude, defaultLongitude);\n    }\n  };\n\n  return {\n    initTmap,\n    removeMarker,\n    searchRoutes,\n    addMarker,\n    clearMarkers,\n    checkDuplMarker,\n    moveLocation,\n    moveNowLocation,\n    searchRoutesTest,\n  };\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-e45b206e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"search-container\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"tags-container\"\n}\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { id: \"map_div\" }, null, -1))\nconst _hoisted_5 = { class: \"map-button\" }\nconst _hoisted_6 = { class: \"course-button\" }\n\nimport {\r\n  Tags,\r\n  Search,\r\n  Button,\r\n  SearchIcon,\r\n  TargetIcon,\r\n  SparkleIcon,\r\n} from '@/components';\r\nimport { ref, onMounted, nextTick } from 'vue';\r\nimport { useMap } from '@/hooks';\r\nimport router from '@/router';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SearchCourse',\n  setup(__props) {\n\r\nconst map = ref<any>(null);\r\nconst showTags = ref(true);\r\n\r\nconst { initTmap, searchRoutesTest, moveNowLocation } = useMap(map);\r\n\r\nonMounted(async () => {\r\n  await initTmap(map);\r\n  await moveNowLocation();\r\n});\r\n\r\nconst handleSearchEvent = (searchText: string) => {\r\n  console.log(searchText);\r\n};\r\n\r\nconst handleMoveNowLocation = () => {\r\n  moveNowLocation();\r\n};\r\n\r\nconst handleSearchRoutes = () => {\r\n  searchRoutesTest(map);\r\n};\r\nconst createCourse = () => {\r\n  router.push({ name: 'create-course' });\r\n};\r\n\r\nconst toggleTags = async () => {\r\n  showTags.value = !showTags.value;\r\n\r\n  await nextTick();\r\n\r\n  if (map.value) {\r\n    map.value.resize(); // Tmap의 크기 조정\r\n  }\r\n};\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: 'var(--color-button-secondary)',\r\n  color: 'var(--color-button-on-secondary)',\r\n  width: '48px',\r\n  height: '48px',\r\n  fontSize: '1.4rem',\r\n};\r\n\r\nconst searchButtonStyle = {\r\n  backgroundColor: 'var(--color-button-secondary)',\r\n  color: 'var(--color-button-on-secondary)',\r\n  height: '48px',\r\n  width: '156px',\r\n  fontSize: '1.4rem',\r\n};\r\n\r\nconst smallButtonStyle = {\r\n  width: '158px',\r\n  height: '44px',\r\n  fontSize: '1.4rem',\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"header\", null, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createVNode(_unref(Search), { onSearch: handleSearchEvent })\n      ]),\n      (showTags.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n            _createVNode(_unref(Tags))\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"search-map\", { 'expanded-map': !showTags.value }])\n    }, [\n      _hoisted_4,\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createVNode(_unref(Button), {\n          icon: _unref(TargetIcon),\n          style: buttonStyle,\n          onClick: handleMoveNowLocation\n        }, null, 8, [\"icon\"]),\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createVNode(_unref(Button), {\n            text: \"주변코스 검색\",\n            icon: _unref(SearchIcon),\n            style: searchButtonStyle,\n            onClick: handleSearchRoutes\n          }, null, 8, [\"icon\"]),\n          _createVNode(_unref(Button), {\n            text: \"코스 생성하기\",\n            icon: _unref(SparkleIcon),\n            style: smallButtonStyle,\n            onClick: createCourse\n          }, null, 8, [\"icon\"])\n        ]),\n        _createVNode(_unref(Button), {\n          text: \"토글 태그\",\n          style: smallButtonStyle,\n          onClick: toggleTags\n        })\n      ])\n    ], 2)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"container\">\r\n    <header>\r\n      <div class=\"search-container\">\r\n        <Search @search=\"handleSearchEvent\" />\r\n      </div>\r\n      <!-- Toggle visibility for the Tags component -->\r\n      <div\r\n        class=\"tags-container\"\r\n        v-if=\"showTags\"\r\n      >\r\n        <Tags />\r\n      </div>\r\n    </header>\r\n\r\n    <div\r\n      class=\"search-map\"\r\n      :class=\"{ 'expanded-map': !showTags }\"\r\n    >\r\n      <div id=\"map_div\"></div>\r\n\r\n      <div class=\"map-button\">\r\n        <Button\r\n          :icon=\"TargetIcon\"\r\n          :style=\"buttonStyle\"\r\n          @click=\"handleMoveNowLocation\"\r\n        />\r\n        <div class=\"course-button\">\r\n          <Button\r\n            text=\"주변코스 검색\"\r\n            :icon=\"SearchIcon\"\r\n            :style=\"searchButtonStyle\"\r\n            @click=\"handleSearchRoutes\"\r\n          />\r\n          <Button\r\n            text=\"코스 생성하기\"\r\n            :icon=\"SparkleIcon\"\r\n            :style=\"smallButtonStyle\"\r\n            @click=\"createCourse\"\r\n          />\r\n        </div>\r\n        <!-- Toggle button to hide/show the Tags component -->\r\n        <Button\r\n          text=\"토글 태그\"\r\n          :style=\"smallButtonStyle\"\r\n          @click=\"toggleTags\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {\r\n  Tags,\r\n  Search,\r\n  Button,\r\n  SearchIcon,\r\n  TargetIcon,\r\n  SparkleIcon,\r\n} from '@/components';\r\nimport { ref, onMounted, nextTick } from 'vue';\r\nimport { useMap } from '@/hooks';\r\nimport router from '@/router';\r\n\r\nconst map = ref<any>(null);\r\nconst showTags = ref(true);\r\n\r\nconst { initTmap, searchRoutesTest, moveNowLocation } = useMap(map);\r\n\r\nonMounted(async () => {\r\n  await initTmap(map);\r\n  await moveNowLocation();\r\n});\r\n\r\nconst handleSearchEvent = (searchText: string) => {\r\n  console.log(searchText);\r\n};\r\n\r\nconst handleMoveNowLocation = () => {\r\n  moveNowLocation();\r\n};\r\n\r\nconst handleSearchRoutes = () => {\r\n  searchRoutesTest(map);\r\n};\r\nconst createCourse = () => {\r\n  router.push({ name: 'create-course' });\r\n};\r\n\r\nconst toggleTags = async () => {\r\n  showTags.value = !showTags.value;\r\n\r\n  await nextTick();\r\n\r\n  if (map.value) {\r\n    map.value.resize(); // Tmap의 크기 조정\r\n  }\r\n};\r\n\r\nconst buttonStyle = {\r\n  backgroundColor: 'var(--color-button-secondary)',\r\n  color: 'var(--color-button-on-secondary)',\r\n  width: '48px',\r\n  height: '48px',\r\n  fontSize: '1.4rem',\r\n};\r\n\r\nconst searchButtonStyle = {\r\n  backgroundColor: 'var(--color-button-secondary)',\r\n  color: 'var(--color-button-on-secondary)',\r\n  height: '48px',\r\n  width: '156px',\r\n  fontSize: '1.4rem',\r\n};\r\n\r\nconst smallButtonStyle = {\r\n  width: '158px',\r\n  height: '44px',\r\n  fontSize: '1.4rem',\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  padding-top: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.search-container {\r\n  padding: 0 20px;\r\n  display: flex;\r\n}\r\n\r\n.tags-container {\r\n  padding: 20px 20px;\r\n  display: flex;\r\n}\r\n\r\n.search-map {\r\n  flex-grow: 1;\r\n  height: calc(100% - 200px);\r\n  position: relative;\r\n  transition: height 0.3s ease;\r\n}\r\n\r\n.expanded-map {\r\n  height: 100%;\r\n}\r\n\r\n.map-button {\r\n  position: relative;\r\n  bottom: 0px;\r\n  padding: var(--margin-m2);\r\n  gap: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n}\r\n\r\n.course-button {\r\n  gap: var(--margin-s);\r\n  display: flex;\r\n}\r\n</style>\r\n","import script from \"./SearchCourse.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SearchCourse.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SearchCourse.vue?vue&type=style&index=0&id=e45b206e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e45b206e\"]])\n\nexport default __exports__"],"names":["requestRoute","async","startX","startY","endX","endY","passList","startName","endName","headers","appKey","process","data","reqCoordType","resCoordType","trim","response","axios","post","features","error","console","getReverseGeocoding","latitude","longitude","get","address","addressInfo","fullAddress","iconMap","course","location","now","start","end","useMap","map","drawInfoArr","resultdrawArr","markers","Tmapv2","window","adjustZoomLevelToFitRoute","length","bounds","LatLngBounds","forEach","point","extend","value","fitBounds","createPolylineSegment","segmentPath","color","weight","Polyline","path","strokeColor","strokeWeight","fillOpacity","direction","directionColor","clearRoute","line","setVisible","clearMarkers","marker","setMap","drawLine","arrPoint","totalPoints","SEGMENT_WEIGHTS","SEGMENT_COLORS","index","Math","floor","slice","polyline","push","requestLocationPermission","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","code","PERMISSION_DENIED","alert","initTmap","Map","width","height","zoom","scaleBar","zoomControl","httpsMode","removeMarker","markerIndex","findIndex","getPosition","lat","lng","splice","log","checkDuplMarker","some","addMarker","gubun","markerPosition","LatLng","Marker","icon","searchRoutes","startLocation","endLocation","passListString","join","resultData","String","geometry","properties","type","coordinates","coord","latlng","Point","convertPoint","Projection","convertEPSG3857ToWGS84GEO","convertChange","_lat","_lng","searchRoutesTest","pointType","includes","latlon","moveLocation","isNaN","currentLocation","setCenter","setZoom","moveNowLocation","coords","defaultLatitude","defaultLongitude","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","key","_hoisted_4","_createElementVNode","id","_hoisted_5","_hoisted_6","_defineComponent","__name","setup","__props","ref","showTags","onMounted","handleSearchEvent","searchText","handleMoveNowLocation","handleSearchRoutes","createCourse","router","name","toggleTags","nextTick","resize","buttonStyle","backgroundColor","fontSize","searchButtonStyle","smallButtonStyle","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","Search","onSearch","Tags","_createCommentVNode","_normalizeClass","Button","TargetIcon","style","onClick","text","SearchIcon","SparkleIcon","__exports__"],"sourceRoot":""}