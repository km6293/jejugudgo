{"version":3,"file":"js/4481.f95768e5.js","mappings":"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","sources":["webpack://frontend/./src/apis/authorityFeature/index.ts","webpack://frontend/./src/views/Auth/SignUpVerification.vue?b1e1","webpack://frontend/./src/views/Auth/SignUpVerification.vue","webpack://frontend/./src/views/Auth/SignUpVerification.vue?dbff"],"sourcesContent":["import axios from 'axios';\n\nconst headers: Record<string, string> = {\n  'Content-Type': 'application/json',\n};\n\nconst handleAxiosError = (error: unknown) => {\n  const errorCode =\n    axios.isAxiosError(error) && error.response\n      ? error.response.data.errorCode\n      : null;\n  throw { originalError: error, errorCode };\n};\n\nexport const sendSms = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/send`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const checkSms = async (\n  name: string,\n  phoneNumber: string,\n  verificationCode: string\n) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/check`;\n    const data = { name, phoneNumber, verificationCode };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendSmsLater = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/send/later`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendEmail = async (email: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/send`;\n    const response = await axios.post(\n      url,\n      { email },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    const errorCode =\n      axios.isAxiosError(error) && error.response\n        ? error.response.data.errorCode\n        : null;\n    throw { originalError: error, errorCode };\n  }\n};\n\nexport const checkEmail = async (email: string, authCode: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/check`;\n    const data = { email, authCode };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const findUserId = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/find/id`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendEmailLater = async (email: string, authCode: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/check/later`;\n    const data = { email, authCode };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const checkId = async (email: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/check/id`;\n    const data = { email };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, isRef as _isRef, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-dbf4e648\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"signup-verification-container\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"verification-text\" }, [\n  /*#__PURE__*/_createElementVNode(\"h1\", { class: \"heading3-bold\" }, \"본인인증을 진행해주세요\"),\n  /*#__PURE__*/_createElementVNode(\"h2\", { class: \"body2-regular\" }, \" 안전한 서비스 사용을 위해 딱 한 번만 본인인증을 진행해요. \")\n], -1))\nconst _hoisted_3 = { class: \"signup-input\" }\nconst _hoisted_4 = { class: \"phone-verification\" }\n\nimport { Button, Input, ResentTimer } from '@/components';\r\nimport { useRouter } from 'vue-router';\r\nimport { reactive } from 'vue';\r\nimport {\r\n  useSignUpIDStore,\r\n  useSignUpPasswordStore,\r\n  useSignUpVerificationStore,\r\n} from '@/stores/auth';\r\nimport { autoHyphen, validatePhoneNumber } from '@/utils';\r\nimport { storeToRefs } from 'pinia';\r\nimport { sendSms, checkSms } from '@/apis/authorityFeature';\r\nimport { signUp } from '@/apis/userFeature';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SignUpVerification',\n  setup(__props) {\n\r\nconst router = useRouter();\r\n\r\nconst signUpVerificationStore = useSignUpVerificationStore();\r\nconst {\r\n  name,\r\n  nameState,\r\n  phoneNumber,\r\n  phoneNumberState,\r\n  code,\r\n  codeState,\r\n  codeMessege,\r\n  cleanPhoneNumber,\r\n} = storeToRefs(signUpVerificationStore);\r\n\r\nconst signUpIDStore = useSignUpIDStore();\r\nconst { email } = storeToRefs(signUpIDStore);\r\n\r\nconst signUpPasswordStore = useSignUpPasswordStore();\r\nconst { password } = storeToRefs(signUpPasswordStore);\r\n\r\nconst state = reactive({\r\n  verificationStart: false,\r\n  verificationExpired: false,\r\n});\r\n\r\nconst sendCode = async () => {\r\n  try {\r\n    if (name.value.length === 0) {\r\n      nameState.value = 'error';\r\n      return;\r\n    }\r\n    nameState.value = 'default';\r\n    if (!validatePhoneNumber(cleanPhoneNumber.value)) {\r\n      phoneNumberState.value = 'error';\r\n      return;\r\n    }\r\n    phoneNumberState.value = 'default';\r\n\r\n    state.verificationStart = true;\r\n    state.verificationExpired = false;\r\n    await sendSms(name.value, cleanPhoneNumber.value);\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (smsError.errorCode === 'INVALID_VALUE_04') {\r\n      codeState.value = 'error';\r\n      codeMessege.value = '이미 계정이 존재합니다.';\r\n    }\r\n  }\r\n};\r\n\r\nconst handleTimeout = () => {\r\n  codeState.value = 'error';\r\n  codeMessege.value = '인증시간이 만료되었습니다.';\r\n  state.verificationExpired = true;\r\n};\r\n\r\nconst nextPage = async () => {\r\n  if (state.verificationExpired) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await checkSms(name.value, cleanPhoneNumber.value, code.value);\r\n    await signUp(\r\n      email.value,\r\n      password.value,\r\n      name.value,\r\n      cleanPhoneNumber.value\r\n    );\r\n    router.push({ name: 'signup-complete' });\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (smsError.errorCode === 'AUTH_03') {\r\n      codeState.value = 'error';\r\n      codeMessege.value = '인증번호가 틀렸습니다.';\r\n    }\r\n  }\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"span\", _hoisted_3, [\n      _createVNode(_unref(Input), {\n        placeholder: \"이름\",\n        state: _unref(nameState),\n        modelValue: _unref(name),\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(name) ? (name).value = $event : null))\n      }, null, 8, [\"state\", \"modelValue\"]),\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createVNode(_unref(Input), {\n          placeholder: \"000-0000-0000\",\n          onInput: _unref(autoHyphen),\n          maxlength: \"13\",\n          modelValue: _unref(phoneNumber),\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_isRef(phoneNumber) ? (phoneNumber).value = $event : null)),\n          state: _unref(phoneNumberState)\n        }, null, 8, [\"onInput\", \"modelValue\", \"state\"]),\n        _createVNode(_unref(Button), {\n          text: \"인증번호 받기\",\n          style: {\r\n            width: '200px',\r\n            height: '44px',\r\n            backgroundColor: 'var(--color-button-secondary)',\r\n            color: 'var(--color-button-on-secondary)',\r\n            fontSize: '1.4rem',\r\n          },\n          onClick: sendCode\n        })\n      ]),\n      _createVNode(_unref(Input), {\n        placeholder: \"인증번호 입력\",\n        modelValue: _unref(code),\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_isRef(code) ? (code).value = $event : null)),\n        state: _unref(codeState),\n        message: _unref(codeMessege)\n      }, null, 8, [\"modelValue\", \"state\", \"message\"])\n    ]),\n    _createVNode(_unref(ResentTimer), {\n      verificationStart: state.verificationStart,\n      handleTimeout: handleTimeout,\n      onResendSms: sendCode\n    }, null, 8, [\"verificationStart\"]),\n    _createVNode(_unref(Button), {\n      class: \"next-button\",\n      onClick: nextPage,\n      text: \"확인\"\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"signup-verification-container\">\r\n    <span class=\"verification-text\">\r\n      <h1 class=\"heading3-bold\">본인인증을 진행해주세요</h1>\r\n      <h2 class=\"body2-regular\">\r\n        안전한 서비스 사용을 위해 딱 한 번만 본인인증을 진행해요.\r\n      </h2>\r\n    </span>\r\n    <span class=\"signup-input\">\r\n      <Input\r\n        placeholder=\"이름\"\r\n        :state=\"nameState\"\r\n        v-model=\"name\"\r\n      />\r\n      <div class=\"phone-verification\">\r\n        <Input\r\n          placeholder=\"000-0000-0000\"\r\n          @input=\"autoHyphen\"\r\n          maxlength=\"13\"\r\n          v-model=\"phoneNumber\"\r\n          :state=\"phoneNumberState\"\r\n        />\r\n        <Button\r\n          text=\"인증번호 받기\"\r\n          :style=\"{\r\n            width: '200px',\r\n            height: '44px',\r\n            backgroundColor: 'var(--color-button-secondary)',\r\n            color: 'var(--color-button-on-secondary)',\r\n            fontSize: '1.4rem',\r\n          }\"\r\n          @click=\"sendCode\"\r\n        />\r\n      </div>\r\n      <Input\r\n        placeholder=\"인증번호 입력\"\r\n        v-model=\"code\"\r\n        :state=\"codeState\"\r\n        :message=\"codeMessege\"\r\n      />\r\n    </span>\r\n\r\n    <ResentTimer\r\n      :verificationStart=\"state.verificationStart\"\r\n      :handleTimeout=\"handleTimeout\"\r\n      @resendSms=\"sendCode\"\r\n    />\r\n\r\n    <Button\r\n      class=\"next-button\"\r\n      @click=\"nextPage\"\r\n      text=\"확인\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { Button, Input, ResentTimer } from '@/components';\r\nimport { useRouter } from 'vue-router';\r\nimport { reactive } from 'vue';\r\nimport {\r\n  useSignUpIDStore,\r\n  useSignUpPasswordStore,\r\n  useSignUpVerificationStore,\r\n} from '@/stores/auth';\r\nimport { autoHyphen, validatePhoneNumber } from '@/utils';\r\nimport { storeToRefs } from 'pinia';\r\nimport { sendSms, checkSms } from '@/apis/authorityFeature';\r\nimport { signUp } from '@/apis/userFeature';\r\n\r\nconst router = useRouter();\r\n\r\nconst signUpVerificationStore = useSignUpVerificationStore();\r\nconst {\r\n  name,\r\n  nameState,\r\n  phoneNumber,\r\n  phoneNumberState,\r\n  code,\r\n  codeState,\r\n  codeMessege,\r\n  cleanPhoneNumber,\r\n} = storeToRefs(signUpVerificationStore);\r\n\r\nconst signUpIDStore = useSignUpIDStore();\r\nconst { email } = storeToRefs(signUpIDStore);\r\n\r\nconst signUpPasswordStore = useSignUpPasswordStore();\r\nconst { password } = storeToRefs(signUpPasswordStore);\r\n\r\nconst state = reactive({\r\n  verificationStart: false,\r\n  verificationExpired: false,\r\n});\r\n\r\nconst sendCode = async () => {\r\n  try {\r\n    if (name.value.length === 0) {\r\n      nameState.value = 'error';\r\n      return;\r\n    }\r\n    nameState.value = 'default';\r\n    if (!validatePhoneNumber(cleanPhoneNumber.value)) {\r\n      phoneNumberState.value = 'error';\r\n      return;\r\n    }\r\n    phoneNumberState.value = 'default';\r\n\r\n    state.verificationStart = true;\r\n    state.verificationExpired = false;\r\n    await sendSms(name.value, cleanPhoneNumber.value);\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (smsError.errorCode === 'INVALID_VALUE_04') {\r\n      codeState.value = 'error';\r\n      codeMessege.value = '이미 계정이 존재합니다.';\r\n    }\r\n  }\r\n};\r\n\r\nconst handleTimeout = () => {\r\n  codeState.value = 'error';\r\n  codeMessege.value = '인증시간이 만료되었습니다.';\r\n  state.verificationExpired = true;\r\n};\r\n\r\nconst nextPage = async () => {\r\n  if (state.verificationExpired) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await checkSms(name.value, cleanPhoneNumber.value, code.value);\r\n    await signUp(\r\n      email.value,\r\n      password.value,\r\n      name.value,\r\n      cleanPhoneNumber.value\r\n    );\r\n    router.push({ name: 'signup-complete' });\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (smsError.errorCode === 'AUTH_03') {\r\n      codeState.value = 'error';\r\n      codeMessege.value = '인증번호가 틀렸습니다.';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.signup-verification-container {\r\n  width: 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n}\r\n\r\n.signup-input {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n}\r\n\r\n.phone-verification {\r\n  display: flex;\r\n  gap: 8px;\r\n  align-items: center;\r\n}\r\n\r\n.verification-text {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n\r\n  h1 {\r\n    color: var(--color-neutral-white);\r\n  }\r\n\r\n  h2 {\r\n    color: var(--color-neutral-500);\r\n  }\r\n}\r\n\r\n.resend-timer-container {\r\n  margin-top: 8px;\r\n  height: 40px;\r\n  display: flex;\r\n  font-size: 1.2rem;\r\n  color: var(--color-neutral-100);\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.resent {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n}\r\n\r\n.next-button {\r\n  margin-top: auto;\r\n  align-self: center;\r\n}\r\n</style>\r\n","import script from \"./SignUpVerification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SignUpVerification.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SignUpVerification.vue?vue&type=style&index=0&id=dbf4e648&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-dbf4e648\"]])\n\nexport default __exports__"],"names":["headers","handleAxiosError","error","errorCode","axios","isAxiosError","response","data","originalError","sendSms","async","name","phoneNumber","url","post","checkSms","verificationCode","sendSmsLater","sendEmail","email","checkEmail","authCode","findUserId","sendEmailLater","checkId","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_defineComponent","__name","setup","__props","router","useRouter","signUpVerificationStore","useSignUpVerificationStore","nameState","phoneNumberState","code","codeState","codeMessege","cleanPhoneNumber","storeToRefs","signUpIDStore","useSignUpIDStore","signUpPasswordStore","useSignUpPasswordStore","password","state","reactive","verificationStart","verificationExpired","sendCode","value","length","validatePhoneNumber","smsError","handleTimeout","nextPage","signUp","push","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","Input","placeholder","modelValue","$event","_isRef","onInput","autoHyphen","maxlength","Button","text","style","width","height","backgroundColor","color","fontSize","onClick","message","ResentTimer","onResendSms","__exports__"],"sourceRoot":""}