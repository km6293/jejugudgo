{"version":3,"file":"js/4739.4ed7f35e.js","mappings":"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","sources":["webpack://frontend/./src/apis/authorityFeature/index.ts","webpack://frontend/./src/views/Auth/FindIDByPhone.vue?fb13","webpack://frontend/./src/views/Auth/FindIDByPhone.vue","webpack://frontend/./src/views/Auth/FindIDByPhone.vue?3439"],"sourcesContent":["import axios from 'axios';\n\nconst headers: Record<string, string> = {\n  'Content-Type': 'application/json',\n};\n\nconst handleAxiosError = (error: unknown) => {\n  const errorCode =\n    axios.isAxiosError(error) && error.response\n      ? error.response.data.errorCode\n      : null;\n  throw { originalError: error, errorCode };\n};\n\nexport const sendSms = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/send`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const checkSms = async (\n  name: string,\n  phoneNumber: string,\n  verificationCode: string\n) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/check`;\n    const data = { name, phoneNumber, verificationCode };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendSmsLater = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/send/later`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendEmail = async (email: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/send`;\n    const response = await axios.post(\n      url,\n      { email },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    const errorCode =\n      axios.isAxiosError(error) && error.response\n        ? error.response.data.errorCode\n        : null;\n    throw { originalError: error, errorCode };\n  }\n};\n\nexport const checkEmail = async (email: string, authCode: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/check`;\n    const data = { email, authCode };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const findUserId = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/find/id`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendEmailLater = async (email: string, authCode: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/check/later`;\n    const data = { email, authCode };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const checkId = async (email: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/check/id`;\n    const data = { email };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-2c09b800\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"verification-container\" }\nconst _hoisted_2 = { class: \"input-group\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\n\nimport { ref, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { sendSmsLater, checkSms } from '@/apis/authorityFeature';\r\nimport { autoHyphen, validatePhoneNumber } from '@/utils';\r\nimport { useSignUpIDStore } from '@/stores/auth';\r\nimport { storeToRefs } from 'pinia';\r\nimport { Button, Input, ResentTimer } from '@/components';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'FindIDByPhone',\n  setup(__props) {\n\r\nconst router = useRouter();\r\nconst signUpIDStore = useSignUpIDStore();\r\nconst { inputState, inputMessage } = storeToRefs(signUpIDStore);\r\n\r\nconst state = reactive({\r\n  verificationSent: false,\r\n  verificationExpired: false,\r\n  verificationStart: null,\r\n});\r\n\r\nconst name = ref('');\r\nconst nameState = ref('default');\r\nconst phoneNumber = ref('');\r\nconst phoneNumberState = ref('default');\r\nconst verificationCode = ref('');\r\nconst codeState = ref('default');\r\nconst codeMessage = ref('');\r\n\r\nconst sendVerificationCode = async () => {\r\n  if (name.value.length === 0) {\r\n    nameState.value = 'error';\r\n    return;\r\n  }\r\n  nameState.value = 'default';\r\n\r\n  const cleanedPhoneNumber = phoneNumber.value.replace(/-/g, '');\r\n  if (!validatePhoneNumber(cleanedPhoneNumber)) {\r\n    phoneNumberState.value = 'error';\r\n    return;\r\n  }\r\n  phoneNumberState.value = 'default';\r\n\r\n  try {\r\n    await sendSmsLater(name.value, cleanedPhoneNumber);\r\n    state.verificationSent = true;\r\n    state.verificationStart = Date.now();\r\n    inputState.value = 'default';\r\n    inputMessage.value = '';\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (smsError.errorCode === 'INVALID_VALUE_04') {\r\n      inputState.value = 'error';\r\n      inputMessage.value = '이미 계정이 존재합니다.';\r\n    } else if (smsError.errorCode === 'INVALID_VALUE_01') {\r\n      inputState.value = 'error';\r\n      inputMessage.value = '휴대폰 번호를 정확히 입력해주세요.';\r\n    }\r\n  }\r\n};\r\n\r\nconst checkVerificationCode = async () => {\r\n  if (!state.verificationSent) return;\r\n\r\n  try {\r\n    const cleanedPhoneNumber = phoneNumber.value.replace(/-/g, '');\r\n    await checkSms(name.value, cleanedPhoneNumber, verificationCode.value);\r\n    router.push({\r\n      name: 'find-id-result',\r\n      query: {\r\n        name: name.value,\r\n        phoneNumber: cleanedPhoneNumber,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (smsError.errorCode === 'AUTH_03') {\r\n      codeState.value = 'error';\r\n      codeMessage.value = '인증번호가 틀렸습니다.';\r\n    }\r\n  }\r\n};\r\n\r\nconst handleTimeout = () => {\r\n  state.verificationExpired = true;\r\n  state.verificationSent = false;\r\n  state.verificationStart = null;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"span\", _hoisted_2, [\n      _createVNode(_unref(Input), {\n        placeholder: \"이름을 입력해주세요\",\n        label: \"이름\",\n        modelValue: name.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((name).value = $event)),\n        state: nameState.value\n      }, null, 8, [\"modelValue\", \"state\"]),\n      _createVNode(_unref(Input), {\n        placeholder: \"000-0000-0000\",\n        onInput: _unref(autoHyphen),\n        maxlength: \"13\",\n        label: \"휴대폰 번호\",\n        modelValue: phoneNumber.value,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((phoneNumber).value = $event)),\n        state: _unref(inputState),\n        message: \"가입 시 등록한 휴대폰 번호를 입력해주세요\"\n      }, null, 8, [\"onInput\", \"modelValue\", \"state\"]),\n      (!state.verificationSent)\n        ? (_openBlock(), _createBlock(_unref(Button), {\n            key: 0,\n            text: \"인증번호 받기\",\n            onClick: sendVerificationCode,\n            style: {\r\n          backgroundColor: 'var(--color-button-secondary)',\r\n          color: 'var(--color-button-on-secondary)',\r\n          height: '44px',\r\n          fontSize: '1.4rem',\r\n        }\n          }))\n        : _createCommentVNode(\"\", true),\n      (state.verificationSent)\n        ? (_openBlock(), _createBlock(_unref(Input), {\n            key: 1,\n            placeholder: \"인증번호 입력\",\n            label: \"인증번호\",\n            modelValue: verificationCode.value,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((verificationCode).value = $event)),\n            state: codeState.value,\n            message: codeMessage.value\n          }, null, 8, [\"modelValue\", \"state\", \"message\"]))\n        : _createCommentVNode(\"\", true),\n      (state.verificationSent)\n        ? (_openBlock(), _createBlock(_unref(ResentTimer), {\n            key: 2,\n            verificationStart: state.verificationStart,\n            handleTimeout: handleTimeout,\n            onResendSms: sendVerificationCode\n          }, null, 8, [\"verificationStart\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    (state.verificationSent)\n      ? (_openBlock(), _createBlock(_unref(Button), {\n          key: 0,\n          class: \"next-button\",\n          onClick: checkVerificationCode,\n          text: \"다음\"\n        }))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"verification-container\">\r\n    <span class=\"input-group\">\r\n      <Input\r\n        placeholder=\"이름을 입력해주세요\"\r\n        label=\"이름\"\r\n        v-model=\"name\"\r\n        :state=\"nameState\"\r\n      />\r\n      <Input\r\n        placeholder=\"000-0000-0000\"\r\n        @input=\"autoHyphen\"\r\n        maxlength=\"13\"\r\n        label=\"휴대폰 번호\"\r\n        v-model=\"phoneNumber\"\r\n        :state=\"inputState\"\r\n        message=\"가입 시 등록한 휴대폰 번호를 입력해주세요\"\r\n      />\r\n      <Button\r\n        v-if=\"!state.verificationSent\"\r\n        text=\"인증번호 받기\"\r\n        @click=\"sendVerificationCode\"\r\n        :style=\"{\r\n          backgroundColor: 'var(--color-button-secondary)',\r\n          color: 'var(--color-button-on-secondary)',\r\n          height: '44px',\r\n          fontSize: '1.4rem',\r\n        }\"\r\n      />\r\n      <Input\r\n        v-if=\"state.verificationSent\"\r\n        placeholder=\"인증번호 입력\"\r\n        label=\"인증번호\"\r\n        v-model=\"verificationCode\"\r\n        :state=\"codeState\"\r\n        :message=\"codeMessage\"\r\n      />\r\n      <ResentTimer\r\n        v-if=\"state.verificationSent\"\r\n        :verificationStart=\"state.verificationStart\"\r\n        :handleTimeout=\"handleTimeout\"\r\n        @resendSms=\"sendVerificationCode\"\r\n      />\r\n    </span>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <Button\r\n      v-if=\"state.verificationSent\"\r\n      class=\"next-button\"\r\n      @click=\"checkVerificationCode\"\r\n      text=\"다음\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { sendSmsLater, checkSms } from '@/apis/authorityFeature';\r\nimport { autoHyphen, validatePhoneNumber } from '@/utils';\r\nimport { useSignUpIDStore } from '@/stores/auth';\r\nimport { storeToRefs } from 'pinia';\r\nimport { Button, Input, ResentTimer } from '@/components';\r\n\r\nconst router = useRouter();\r\nconst signUpIDStore = useSignUpIDStore();\r\nconst { inputState, inputMessage } = storeToRefs(signUpIDStore);\r\n\r\nconst state = reactive({\r\n  verificationSent: false,\r\n  verificationExpired: false,\r\n  verificationStart: null,\r\n});\r\n\r\nconst name = ref('');\r\nconst nameState = ref('default');\r\nconst phoneNumber = ref('');\r\nconst phoneNumberState = ref('default');\r\nconst verificationCode = ref('');\r\nconst codeState = ref('default');\r\nconst codeMessage = ref('');\r\n\r\nconst sendVerificationCode = async () => {\r\n  if (name.value.length === 0) {\r\n    nameState.value = 'error';\r\n    return;\r\n  }\r\n  nameState.value = 'default';\r\n\r\n  const cleanedPhoneNumber = phoneNumber.value.replace(/-/g, '');\r\n  if (!validatePhoneNumber(cleanedPhoneNumber)) {\r\n    phoneNumberState.value = 'error';\r\n    return;\r\n  }\r\n  phoneNumberState.value = 'default';\r\n\r\n  try {\r\n    await sendSmsLater(name.value, cleanedPhoneNumber);\r\n    state.verificationSent = true;\r\n    state.verificationStart = Date.now();\r\n    inputState.value = 'default';\r\n    inputMessage.value = '';\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (smsError.errorCode === 'INVALID_VALUE_04') {\r\n      inputState.value = 'error';\r\n      inputMessage.value = '이미 계정이 존재합니다.';\r\n    } else if (smsError.errorCode === 'INVALID_VALUE_01') {\r\n      inputState.value = 'error';\r\n      inputMessage.value = '휴대폰 번호를 정확히 입력해주세요.';\r\n    }\r\n  }\r\n};\r\n\r\nconst checkVerificationCode = async () => {\r\n  if (!state.verificationSent) return;\r\n\r\n  try {\r\n    const cleanedPhoneNumber = phoneNumber.value.replace(/-/g, '');\r\n    await checkSms(name.value, cleanedPhoneNumber, verificationCode.value);\r\n    router.push({\r\n      name: 'find-id-result',\r\n      query: {\r\n        name: name.value,\r\n        phoneNumber: cleanedPhoneNumber,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (smsError.errorCode === 'AUTH_03') {\r\n      codeState.value = 'error';\r\n      codeMessage.value = '인증번호가 틀렸습니다.';\r\n    }\r\n  }\r\n};\r\n\r\nconst handleTimeout = () => {\r\n  state.verificationExpired = true;\r\n  state.verificationSent = false;\r\n  state.verificationStart = null;\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.verification-container {\r\n  width: 100%;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n}\r\n\r\n.next-button {\r\n  margin-top: auto;\r\n  align-self: center;\r\n}\r\n</style>\r\n","import script from \"./FindIDByPhone.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FindIDByPhone.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./FindIDByPhone.vue?vue&type=style&index=0&id=2c09b800&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2c09b800\"]])\n\nexport default __exports__"],"names":["headers","handleAxiosError","error","errorCode","axios","isAxiosError","response","data","originalError","sendSms","async","name","phoneNumber","url","post","checkSms","verificationCode","sendSmsLater","sendEmail","email","checkEmail","authCode","findUserId","sendEmailLater","checkId","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_createElementVNode","_hoisted_4","_hoisted_5","_defineComponent","__name","setup","__props","router","useRouter","signUpIDStore","useSignUpIDStore","inputState","inputMessage","storeToRefs","state","reactive","verificationSent","verificationExpired","verificationStart","ref","nameState","phoneNumberState","codeState","codeMessage","sendVerificationCode","value","length","cleanedPhoneNumber","replace","validatePhoneNumber","Date","now","smsError","checkVerificationCode","push","query","handleTimeout","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","Input","placeholder","label","modelValue","$event","onInput","autoHyphen","maxlength","message","_createCommentVNode","_createBlock","Button","key","text","onClick","style","backgroundColor","color","height","fontSize","ResentTimer","onResendSms","__exports__"],"sourceRoot":""}