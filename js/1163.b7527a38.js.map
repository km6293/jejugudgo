{"version":3,"file":"js/1163.b7527a38.js","mappings":"oOAGA,MACMA,EAAa,CAAEC,IAAK,GACpBC,EAAa,CAAEC,MAAO,eACtBC,EAAa,CAAC,MAAO,MAAO,WAC5BC,EAAa,CAAEF,MAAO,qBACtBG,EAAa,CAAEH,MAAO,mBACtBI,EAAa,CAAEJ,MAAO,8BACtBK,EAAa,CAAEL,MAAO,gBACtBM,EAAa,CAAEN,MAAO,wBACtBO,EAAa,CAAEP,MAAO,4BAQ5B,OAA4BQ,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,cACRC,MAAO,CACLC,IAAK,CAAC,EACNC,WAAY,CAAC,GAEfC,KAAAA,CAAMC,GCYR,MAKMC,GAAQC,EAAAA,EAAAA,IAAI,MACZC,GAAcC,EAAAA,EAAAA,IAAU,iBAExBC,EAAaC,UACjB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,oDACA,CACEC,QAAS,CACPC,cAAe,UAAUR,OAMzBS,EAAgBL,EAASM,KAAKC,QAAQC,QAAO,CAACC,EAAKf,KACvD,MAAMjB,EAAMiB,EAAMgB,aAKlB,OAJKD,EAAIhC,KACPgC,EAAIhC,GAAO,IAEbgC,EAAIhC,GAAKkC,KAAKjB,GACPe,CAAG,GACT,CAAC,GAGJf,EAAMkB,MAAQC,OAAOC,OAAOT,GACzBU,MAAM,EAAG,GACTC,KAAKC,GAAUA,EAAM,KACxBC,QAAQC,IAAIzB,EAAMkB,M,CAClB,MAAOQ,GACPF,QAAQE,MAAM,wBAAyBA,E,GAKrCC,EAAmBC,IACnBA,GACFC,OAAOC,KAAKF,EAAK,S,EDNrB,OCWAG,EAAAA,EAAAA,IAAU3B,GDXH,CAAC4B,EAAUC,IACRjC,EAAMkB,OAASlB,EAAMkB,MAAMgB,SAC9BC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOtD,EAAY,EACpDuD,EAAAA,EAAAA,IAAoB,MAAOrD,EAAY,GACpCmD,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBE,EAAAA,GAAW,MAAMC,EAAAA,EAAAA,IAAYvC,EAAMkB,OAAQsB,KACxEL,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO,CAC/CrD,IAAKyD,EAAKC,QACVxD,MAAO,qBACN,EACDoD,EAAAA,EAAAA,IAAoB,MAAO,CACzBK,IAAKF,EAAKG,UAAY,sCACtB/C,IAAK4C,EAAKI,OAASZ,EAAKpC,IACxBX,MAAO,gBACP4D,QAAUC,GAAiBnB,EAAgBa,EAAKO,iBAC/C,KAAM,EAAG7D,IACZmD,EAAAA,EAAAA,IAAoB,MAAOlD,EAAY,EACrC6D,EAAAA,EAAAA,KAAaC,EAAAA,EAAAA,IAAOC,EAAAA,IAAQ,CAAEC,OAAQ,eAExCd,EAAAA,EAAAA,IAAoB,MAAOjD,EAAY,EACrCiD,EAAAA,EAAAA,IAAoB,MAAOhD,GAAY+D,EAAAA,EAAAA,IAAiBZ,EAAKI,OAAQ,IACrEP,EAAAA,EAAAA,IAAoB,MAAO/C,EAAY,EACrC+C,EAAAA,EAAAA,IAAoB,MAAO9C,GAAY6D,EAAAA,EAAAA,IAAiBZ,EAAKxB,cAAe,IAC5EqB,EAAAA,EAAAA,IAAoB,MAAO7C,GAAY4D,EAAAA,EAAAA,IAAiBZ,EAAKa,WAAY,YAI7E,YAGRC,EAAAA,EAAAA,IAAoB,IAAI,EAE9B,I,UEnGA,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/views/home/components/ContestCard.vue?51ce","webpack://frontend/./src/views/home/components/ContestCard.vue","webpack://frontend/./src/views/home/components/ContestCard.vue?92c2"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-39757557\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"contest-row\" }\nconst _hoisted_3 = [\"src\", \"alt\", \"onClick\"]\nconst _hoisted_4 = { class: \"contest-scheduled\" }\nconst _hoisted_5 = { class: \"contest-content\" }\nconst _hoisted_6 = { class: \"content-title body1-medium\" }\nconst _hoisted_7 = { class: \"content-info\" }\nconst _hoisted_8 = { class: \"info-name regular-12\" }\nconst _hoisted_9 = { class: \"info-date caption-medium\" }\n\nimport { CSSProperties, ref, onMounted } from 'vue';\r\nimport { Chips } from '@/components';\r\nimport axios from 'axios';\r\nimport { getCookie } from '@/utils';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ContestCard',\n  props: {\n    alt: {},\n    imageStyle: {}\n  },\n  setup(__props: any) {\n\r\nconst props = __props;\r\n\r\nconst event = ref(null);\r\nconst accessToken = getCookie('Authorization');\r\n\r\nconst fetchEvent = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.VUE_APP_BASE_API}/api/v1/event?query=ALL`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    // 그룹화: 예를 들어, organization 또는 다른 기준으로 그룹화\r\n    const groupedEvents = response.data.content.reduce((acc, event) => {\r\n      const key = event.organization; // 그룹화 기준\r\n      if (!acc[key]) {\r\n        acc[key] = [];\r\n      }\r\n      acc[key].push(event);\r\n      return acc;\r\n    }, {});\r\n\r\n    // 각 그룹에서 첫 번째 이벤트만 선택하고 최대 5개까지 가져옴\r\n    event.value = Object.values(groupedEvents)\r\n      .slice(0, 5) // 그룹의 수를 5개로 제한\r\n      .map((group) => group[0]); // 각 그룹에서 첫 번째 이벤트 선택\r\n    console.log(event.value);\r\n  } catch (error) {\r\n    console.error('Error fetching event:', error);\r\n  }\r\n};\r\n\r\n// URL을 새 창에서 열기 위한 함수\r\nconst openInformation = (url) => {\r\n  if (url) {\r\n    window.open(url, '_blank'); // 새 창에서 URL 열기\r\n  }\r\n};\r\n\r\n// 컴포넌트가 마운트될 때 API 호출\r\nonMounted(fetchEvent);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (event.value && event.value.length)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(event.value, (item) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: item.eventId,\n              class: \"contest-container\"\n            }, [\n              _createElementVNode(\"img\", {\n                src: item.imageUrl || 'https://via.placeholder.com/220x182',\n                alt: item.title || _ctx.alt,\n                class: \"contest-image\",\n                onClick: ($event: any) => (openInformation(item.informationUrl))\n              }, null, 8, _hoisted_3),\n              _createElementVNode(\"div\", _hoisted_4, [\n                _createVNode(_unref(Chips), { status: \"ongoing\" })\n              ]),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", _hoisted_6, _toDisplayString(item.title), 1),\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createElementVNode(\"div\", _hoisted_8, _toDisplayString(item.organization), 1),\n                  _createElementVNode(\"div\", _hoisted_9, _toDisplayString(item.startDate), 1)\n                ])\n              ])\n            ]))\n          }), 128))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n  <div v-if=\"event && event.length\">\r\n    <div class=\"contest-row\">\r\n      <div\r\n        v-for=\"item in event\"\r\n        :key=\"item.eventId\"\r\n        class=\"contest-container\"\r\n      >\r\n        <img\r\n          :src=\"item.imageUrl || 'https://via.placeholder.com/220x182'\"\r\n          :alt=\"item.title || alt\"\r\n          class=\"contest-image\"\r\n          @click=\"openInformation(item.informationUrl)\"\r\n        />\r\n\r\n        <div class=\"contest-scheduled\">\r\n          <Chips status=\"ongoing\" />\r\n        </div>\r\n        <div class=\"contest-content\">\r\n          <div class=\"content-title body1-medium\">\r\n            {{ item.title }}\r\n          </div>\r\n          <div class=\"content-info\">\r\n            <div class=\"info-name regular-12\">{{ item.organization }}</div>\r\n            <div class=\"info-date caption-medium\">{{ item.startDate }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { CSSProperties, defineProps, ref, onMounted } from 'vue';\r\nimport { Chips } from '@/components';\r\nimport axios from 'axios';\r\nimport { getCookie } from '@/utils';\r\n\r\nconst props = defineProps<{\r\n  alt?: string;\r\n  imageStyle?: CSSProperties;\r\n}>();\r\n\r\nconst event = ref(null);\r\nconst accessToken = getCookie('Authorization');\r\n\r\nconst fetchEvent = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.VUE_APP_BASE_API}/api/v1/event?query=ALL`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    // 그룹화: 예를 들어, organization 또는 다른 기준으로 그룹화\r\n    const groupedEvents = response.data.content.reduce((acc, event) => {\r\n      const key = event.organization; // 그룹화 기준\r\n      if (!acc[key]) {\r\n        acc[key] = [];\r\n      }\r\n      acc[key].push(event);\r\n      return acc;\r\n    }, {});\r\n\r\n    // 각 그룹에서 첫 번째 이벤트만 선택하고 최대 5개까지 가져옴\r\n    event.value = Object.values(groupedEvents)\r\n      .slice(0, 5) // 그룹의 수를 5개로 제한\r\n      .map((group) => group[0]); // 각 그룹에서 첫 번째 이벤트 선택\r\n    console.log(event.value);\r\n  } catch (error) {\r\n    console.error('Error fetching event:', error);\r\n  }\r\n};\r\n\r\n// URL을 새 창에서 열기 위한 함수\r\nconst openInformation = (url) => {\r\n  if (url) {\r\n    window.open(url, '_blank'); // 새 창에서 URL 열기\r\n  }\r\n};\r\n\r\n// 컴포넌트가 마운트될 때 API 호출\r\nonMounted(fetchEvent);\r\n</script>\r\n\r\n<style scoped>\r\n.contest-row {\r\n  display: flex; /* Flexbox 사용하여 수평 배치 */\r\n  gap: 16px; /* 아이템 간 간격 조정 */\r\n  justify-content: space-between; /* 아이템 간격 자동 조정 */\r\n}\r\n\r\n.contest-container {\r\n  border-radius: 12px;\r\n  position: relative;\r\n  flex: 0 0 auto; /* 컨테이너가 자동 크기 조정되도록 설정 */\r\n  max-width: 220px; /* 각 컨테이너의 최대 너비 설정 */\r\n  height: 250px; /* 고정 높이 설정 */\r\n}\r\n\r\n.contest-scheduled {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  padding: var(--padding-xs);\r\n}\r\n\r\n.contest-image {\r\n  width: 220px;\r\n  height: 175px;\r\n  border-top-left-radius: 12px;\r\n  border-top-right-radius: 12px;\r\n}\r\n\r\n.contest-content {\r\n  width: 220px;\r\n  height: 74px;\r\n  background-color: var(--color-card-surface);\r\n  border-bottom-left-radius: 12px;\r\n  border-bottom-right-radius: 12px;\r\n  gap: 8px;\r\n  padding: 12px;\r\n  display: grid;\r\n}\r\n\r\n.content-title {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: var(--color-neutral-100);\r\n}\r\n\r\n.content-info {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.info-name {\r\n  color: var(--color-text-muted);\r\n}\r\n\r\n.info-date {\r\n  color: var(--color-text-body);\r\n}\r\n</style>\r\n","import script from \"./ContestCard.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ContestCard.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ContestCard.vue?vue&type=style&index=0&id=39757557&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39757557\"]])\n\nexport default __exports__"],"names":["_hoisted_1","key","_hoisted_2","class","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_defineComponent","__name","props","alt","imageStyle","setup","__props","event","ref","accessToken","getCookie","fetchEvent","async","response","axios","get","headers","Authorization","groupedEvents","data","content","reduce","acc","organization","push","value","Object","values","slice","map","group","console","log","error","openInformation","url","window","open","onMounted","_ctx","_cache","length","_openBlock","_createElementBlock","_createElementVNode","_Fragment","_renderList","item","eventId","src","imageUrl","title","onClick","$event","informationUrl","_createVNode","_unref","Chips","status","_toDisplayString","startDate","_createCommentVNode","__exports__"],"sourceRoot":""}