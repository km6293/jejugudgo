{"version":3,"file":"js/1664.c0253e84.js","mappings":"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","sources":["webpack://frontend/./src/apis/authorityFeature/index.ts","webpack://frontend/./src/views/Auth/FindPasswordByEmail.vue?9175","webpack://frontend/./src/views/Auth/FindPasswordByEmail.vue","webpack://frontend/./src/views/Auth/FindPasswordByEmail.vue?46d1"],"sourcesContent":["import axios from 'axios';\n\nconst headers: Record<string, string> = {\n  'Content-Type': 'application/json',\n};\n\nconst handleAxiosError = (error: unknown) => {\n  const errorCode =\n    axios.isAxiosError(error) && error.response\n      ? error.response.data.errorCode\n      : null;\n  throw { originalError: error, errorCode };\n};\n\nexport const sendSms = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/send`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const checkSms = async (\n  name: string,\n  phoneNumber: string,\n  verificationCode: string\n) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/check`;\n    const data = { name, phoneNumber, verificationCode };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendSmsLater = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/sms/send/later`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendEmail = async (email: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/send`;\n    const response = await axios.post(\n      url,\n      { email },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    const errorCode =\n      axios.isAxiosError(error) && error.response\n        ? error.response.data.errorCode\n        : null;\n    throw { originalError: error, errorCode };\n  }\n};\n\nexport const checkEmail = async (email: string, authCode: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/check`;\n    const data = { email, authCode };\n    const response = await axios.post(url, data, {\n      headers,\n    });\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const findUserId = async (name: string, phoneNumber: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/find/id`;\n    const data = { name, phoneNumber };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const sendEmailLater = async (email: string, authCode: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/authentication/check/later`;\n    const data = { email, authCode };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n\nexport const checkId = async (email: string) => {\n  try {\n    const url = `${process.env.VUE_APP_BASE_API}/api/v1/auth/check/id`;\n    const data = { email };\n    const response = await axios.post(url, data);\n\n    return response.data;\n  } catch (error) {\n    handleAxiosError(error);\n  }\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-8f383476\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"find-password-email-container\" }\nconst _hoisted_2 = { class: \"find-password-email-input\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\n\nimport { ref, reactive, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { sendEmail, sendEmailLater } from '@/apis/authorityFeature/index';\r\nimport { Button, Input, ResentTimer } from '@/components';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'FindPasswordByEmail',\n  setup(__props) {\n\r\nconst router = useRouter();\r\n\r\nconst state = reactive({\r\n  verificationSent: false,\r\n  verificationExpired: false,\r\n  verificationStart: false,\r\n  timerKey: 0, // Key to force re-render of Timer\r\n});\r\n\r\nconst name = ref('');\r\nconst email = ref('');\r\nconst authCode = ref('');\r\nconst userId = ref('');\r\n\r\nconst nameState = ref('default');\r\nconst emailState = ref('default');\r\nconst codeState = ref('default');\r\nconst codeMessage = ref('');\r\n\r\n// Function to handle the expiration of the timer\r\nconst handleTimerEnd = () => {\r\n  state.verificationExpired = true;\r\n  state.verificationStart = false;\r\n};\r\n\r\n// Function to send verification email\r\nconst sendVerificationEmail = async () => {\r\n  if (name.value.length === 0) {\r\n    nameState.value = 'error';\r\n    return;\r\n  }\r\n  nameState.value = 'default';\r\n\r\n  if (!validateEmail(email.value)) {\r\n    emailState.value = 'error';\r\n    return;\r\n  }\r\n  emailState.value = 'default';\r\n\r\n  try {\r\n    await sendEmail(email.value);\r\n    state.verificationSent = true;\r\n    state.verificationStart = true;\r\n    state.timerKey += 1; // Force re-render\r\n  } catch (error) {\r\n    const emailError = error as { errorCode: string | null };\r\n    if (emailError.errorCode) {\r\n      emailState.value = 'error';\r\n    }\r\n  }\r\n};\r\n\r\n// Function to check the verification code\r\nconst checkVerificationCode = async () => {\r\n  if (!state.verificationSent) return;\r\n\r\n  try {\r\n    const response = await sendEmailLater(email.value, authCode.value);\r\n    userId.value = response.id ?? '';\r\n    console.log(userId.value);\r\n\r\n    router.push({\r\n      name: 'find-password-reset',\r\n      query: {\r\n        name: name.value,\r\n        email: email.value,\r\n        userId: userId.value,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (\r\n      smsError.errorCode === 'AUTH_03' ||\r\n      smsError.errorCode === 'INVALID_VALUE_02'\r\n    ) {\r\n      codeState.value = 'error';\r\n      codeMessage.value = '인증번호가 틀렸습니다.';\r\n    }\r\n  }\r\n};\r\n\r\n// Function to validate email\r\nconst validateEmail = (email: string): boolean => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\n// Watch for changes in verificationStart to manage timer state\r\nwatch(\r\n  () => state.verificationStart,\r\n  (newVal) => {\r\n    if (newVal) {\r\n      state.timerKey += 1; // Force re-render\r\n    }\r\n  }\r\n);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"span\", _hoisted_2, [\n      _createVNode(_unref(Input), {\n        placeholder: \"이름을 입력해주세요\",\n        label: \"이름\",\n        modelValue: name.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((name).value = $event)),\n        state: nameState.value\n      }, null, 8, [\"modelValue\", \"state\"]),\n      _createVNode(_unref(Input), {\n        placeholder: \"example@naver.com\",\n        label: \"이메일\",\n        modelValue: email.value,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((email).value = $event)),\n        state: emailState.value,\n        message: \"이메일 주소를 입력해주세요\"\n      }, null, 8, [\"modelValue\", \"state\"]),\n      (!state.verificationSent && !state.isTimerActive)\n        ? (_openBlock(), _createBlock(_unref(Button), {\n            key: 0,\n            text: \"인증번호 받기\",\n            style: {\r\n          backgroundColor: 'var(--color-button-secondary)',\r\n          color: 'var(--color-button-on-secondary)',\r\n          height: '44px',\r\n          fontSize: '1.4rem',\r\n        },\n            onClick: sendVerificationEmail\n          }))\n        : _createCommentVNode(\"\", true),\n      (state.verificationSent)\n        ? (_openBlock(), _createBlock(_unref(Input), {\n            key: 1,\n            placeholder: \"인증번호 입력\",\n            label: \"인증번호\",\n            modelValue: authCode.value,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((authCode).value = $event)),\n            state: codeState.value,\n            message: codeMessage.value\n          }, null, 8, [\"modelValue\", \"state\", \"message\"]))\n        : _createCommentVNode(\"\", true),\n      (state.verificationSent && !state.verificationExpired)\n        ? (_openBlock(), _createBlock(_unref(ResentTimer), {\n            key: 2,\n            verificationStart: state.verificationStart,\n            handleTimeout: handleTimerEnd,\n            onResendSms: sendVerificationEmail\n          }, null, 8, [\"verificationStart\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    (state.verificationSent)\n      ? (_openBlock(), _createBlock(_unref(Button), {\n          key: 0,\n          class: \"next-button\",\n          onClick: checkVerificationCode,\n          text: \"다음\"\n        }))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"find-password-email-container\">\r\n    <span class=\"find-password-email-input\">\r\n      <Input\r\n        placeholder=\"이름을 입력해주세요\"\r\n        label=\"이름\"\r\n        v-model=\"name\"\r\n        :state=\"nameState\"\r\n      />\r\n      <Input\r\n        placeholder=\"example@naver.com\"\r\n        label=\"이메일\"\r\n        v-model=\"email\"\r\n        :state=\"emailState\"\r\n        message=\"이메일 주소를 입력해주세요\"\r\n      />\r\n      <Button\r\n        v-if=\"!state.verificationSent && !state.isTimerActive\"\r\n        text=\"인증번호 받기\"\r\n        :style=\"{\r\n          backgroundColor: 'var(--color-button-secondary)',\r\n          color: 'var(--color-button-on-secondary)',\r\n          height: '44px',\r\n          fontSize: '1.4rem',\r\n        }\"\r\n        @click=\"sendVerificationEmail\"\r\n      />\r\n      <Input\r\n        v-if=\"state.verificationSent\"\r\n        placeholder=\"인증번호 입력\"\r\n        label=\"인증번호\"\r\n        v-model=\"authCode\"\r\n        :state=\"codeState\"\r\n        :message=\"codeMessage\"\r\n      />\r\n      <ResentTimer\r\n        v-if=\"state.verificationSent && !state.verificationExpired\"\r\n        :verificationStart=\"state.verificationStart\"\r\n        :handleTimeout=\"handleTimerEnd\"\r\n        @resendSms=\"sendVerificationEmail\"\r\n      />\r\n    </span>\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <Button\r\n      v-if=\"state.verificationSent\"\r\n      class=\"next-button\"\r\n      @click=\"checkVerificationCode\"\r\n      text=\"다음\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { sendEmail, sendEmailLater } from '@/apis/authorityFeature/index';\r\nimport { Button, Input, ResentTimer } from '@/components';\r\n\r\nconst router = useRouter();\r\n\r\nconst state = reactive({\r\n  verificationSent: false,\r\n  verificationExpired: false,\r\n  verificationStart: false,\r\n  timerKey: 0, // Key to force re-render of Timer\r\n});\r\n\r\nconst name = ref('');\r\nconst email = ref('');\r\nconst authCode = ref('');\r\nconst userId = ref('');\r\n\r\nconst nameState = ref('default');\r\nconst emailState = ref('default');\r\nconst codeState = ref('default');\r\nconst codeMessage = ref('');\r\n\r\n// Function to handle the expiration of the timer\r\nconst handleTimerEnd = () => {\r\n  state.verificationExpired = true;\r\n  state.verificationStart = false;\r\n};\r\n\r\n// Function to send verification email\r\nconst sendVerificationEmail = async () => {\r\n  if (name.value.length === 0) {\r\n    nameState.value = 'error';\r\n    return;\r\n  }\r\n  nameState.value = 'default';\r\n\r\n  if (!validateEmail(email.value)) {\r\n    emailState.value = 'error';\r\n    return;\r\n  }\r\n  emailState.value = 'default';\r\n\r\n  try {\r\n    await sendEmail(email.value);\r\n    state.verificationSent = true;\r\n    state.verificationStart = true;\r\n    state.timerKey += 1; // Force re-render\r\n  } catch (error) {\r\n    const emailError = error as { errorCode: string | null };\r\n    if (emailError.errorCode) {\r\n      emailState.value = 'error';\r\n    }\r\n  }\r\n};\r\n\r\n// Function to check the verification code\r\nconst checkVerificationCode = async () => {\r\n  if (!state.verificationSent) return;\r\n\r\n  try {\r\n    const response = await sendEmailLater(email.value, authCode.value);\r\n    userId.value = response.id ?? '';\r\n    console.log(userId.value);\r\n\r\n    router.push({\r\n      name: 'find-password-reset',\r\n      query: {\r\n        name: name.value,\r\n        email: email.value,\r\n        userId: userId.value,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    const smsError = error as { errorCode: string | null };\r\n    if (\r\n      smsError.errorCode === 'AUTH_03' ||\r\n      smsError.errorCode === 'INVALID_VALUE_02'\r\n    ) {\r\n      codeState.value = 'error';\r\n      codeMessage.value = '인증번호가 틀렸습니다.';\r\n    }\r\n  }\r\n};\r\n\r\n// Function to validate email\r\nconst validateEmail = (email: string): boolean => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\n// Watch for changes in verificationStart to manage timer state\r\nwatch(\r\n  () => state.verificationStart,\r\n  (newVal) => {\r\n    if (newVal) {\r\n      state.timerKey += 1; // Force re-render\r\n    }\r\n  }\r\n);\r\n</script>\r\n\r\n<style scoped>\r\n.find-password-email-container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n}\r\n\r\n.find-password-email-input {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n}\r\n\r\n.next-button {\r\n  margin-top: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n</style>\r\n","import script from \"./FindPasswordByEmail.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FindPasswordByEmail.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./FindPasswordByEmail.vue?vue&type=style&index=0&id=8f383476&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8f383476\"]])\n\nexport default __exports__"],"names":["headers","handleAxiosError","error","errorCode","axios","isAxiosError","response","data","originalError","sendSms","async","name","phoneNumber","url","post","checkSms","verificationCode","sendSmsLater","sendEmail","email","checkEmail","authCode","findUserId","sendEmailLater","checkId","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_createElementVNode","_hoisted_4","_hoisted_5","_defineComponent","__name","setup","__props","router","useRouter","state","reactive","verificationSent","verificationExpired","verificationStart","timerKey","ref","userId","nameState","emailState","codeState","codeMessage","handleTimerEnd","sendVerificationEmail","value","length","validateEmail","emailError","checkVerificationCode","id","console","log","push","query","smsError","emailRegex","test","watch","newVal","_ctx","_cache","_openBlock","_createElementBlock","_createVNode","_unref","Input","placeholder","label","modelValue","$event","message","isTimerActive","_createCommentVNode","_createBlock","Button","key","text","style","backgroundColor","color","height","fontSize","onClick","ResentTimer","handleTimeout","onResendSms","__exports__"],"sourceRoot":""}