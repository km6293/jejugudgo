{"version":3,"file":"js/5522.54c8f761.js","mappings":"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","sources":["webpack://frontend/./src/views/home/CheckList.vue?f01d","webpack://frontend/./src/views/home/CheckList.vue","webpack://frontend/./src/views/home/CheckList.vue?78d6"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@/components/icons/basic/Edit Icon.svg'\nimport _imports_1 from '@/components/icons/basic/Delete Icon.svg'\n\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-885e6682\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"check-list-container\" }\nconst _hoisted_2 = { class: \"check-list\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"list-detail body1-regular\"\n}\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"onKeyup\", \"onBlur\"]\nconst _hoisted_6 = {\n  key: 1,\n  class: \"list-detail body1-regular\"\n}\nconst _hoisted_7 = [\"onClick\"]\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"fa-solid fa-ellipsis fa-2xs\" }, null, -1))\nconst _hoisted_9 = [\n  _hoisted_8\n]\nconst _hoisted_10 = {\n  key: 3,\n  class: \"action-buttons\"\n}\nconst _hoisted_11 = [\"onClick\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Edit\",\n  width: \"24px\",\n  height: \"24px\"\n}, null, -1))\nconst _hoisted_13 = [\n  _hoisted_12\n]\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"Delete\",\n  width: \"24px\",\n  height: \"24px\"\n}, null, -1))\nconst _hoisted_16 = [\n  _hoisted_15\n]\nconst _hoisted_17 = {\n  key: 0,\n  class: \"list-content\"\n}\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"list-check\" }, null, -1))\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"add-title body2-bold\" }, \"항목 추가\", -1))\n\nimport { ref, onMounted } from 'vue';\r\nimport { getCookie } from '@/utils/cookies';\r\nimport { Check1Icon, AddIcon } from '@/components';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport axios from 'axios';\r\n\r\n// 기본 리스트 아이템\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CheckList',\n  setup(__props) {\n\r\nconst defaultItems = [\r\n  {\r\n    name: '등산화',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '모자',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '우비',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '배낭',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '생수',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '가벼운 구급약',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '랜턴',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '선글라스',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '간식',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '잠옷',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n];\r\n\r\nconst items = ref([...defaultItems]); // 백엔드에서 가져올 데이터를 저장할 변수\r\nconst newItem = ref('');\r\nconst showInputField = ref(false);\r\n\r\n// 체크 상태 토글 함수\r\nconst toggleCheck = async (index: number) => {\r\n  items.value[index].checked = !items.value[index].checked;\r\n  await saveItems();\r\n};\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const accessToken = getCookie('Authorization');\r\n\r\n    const type = 'CHECK';\r\n\r\n    const response = await axios.get(\r\n      `${process.env.VUE_APP_BASE_API}/api/v1/todo`,\r\n      {\r\n        params: { type },\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    const latestItem = response.data.reduce(\r\n      (max, item) => (item.id > max.id ? item : max),\r\n      response.data[0]\r\n    );\r\n\r\n    if (latestItem !== null) {\r\n      const itemsArray = [];\r\n      const itemsList = latestItem.content.split(', ');\r\n\r\n      for (let i = 0; i < itemsList.length; i++) {\r\n        const item = itemsList[i];\r\n        const [name, checked] = item.split(': ');\r\n\r\n        itemsArray.push({\r\n          name: name.trim(),\r\n          checked: checked === 'true',\r\n          showActions: false,\r\n          editing: false,\r\n          editingName: '',\r\n        });\r\n      }\r\n\r\n      items.value = itemsArray;\r\n    } else {\r\n      items.value = [...defaultItems];\r\n    }\r\n  } catch (error) {\r\n    items.value = [...defaultItems];\r\n  }\r\n});\r\n\r\n// 항목 추가 함수\r\nconst addItem = async () => {\r\n  if (newItem.value.trim() !== '') {\r\n    const newItemData = {\r\n      name: newItem.value,\r\n      checked: false,\r\n      showActions: false,\r\n      editing: false,\r\n      editingName: '',\r\n    };\r\n    items.value.push(newItemData);\r\n\r\n    await saveItems(); // 추가된 후 백엔드에 저장\r\n\r\n    newItem.value = '';\r\n    showInputField.value = false;\r\n  }\r\n};\r\n\r\n// 액션 토글 함수\r\nconst toggleActions = (index: number) => {\r\n  items.value.forEach((item, i) => {\r\n    if (i !== index) item.showActions = false;\r\n  });\r\n\r\n  items.value[index].showActions = !items.value[index].showActions;\r\n};\r\n\r\n// 아이템 수정 함수\r\nconst editItem = (index: number) => {\r\n  const item = items.value[index];\r\n  item.editingName = item.name; // 현재 이름을 수정할 이름으로 설정\r\n  item.editing = true;\r\n  item.showActions = false; // 액션 버튼 숨기기\r\n\r\n  setTimeout(() => {\r\n    const input = document.querySelector(\r\n      `.edit-item-input-${index}`\r\n    ) as HTMLInputElement;\r\n    if (input) {\r\n      input.focus();\r\n    }\r\n  }, 0);\r\n};\r\n\r\n// 아이템 저장 함수\r\nconst saveItem = async (index: number) => {\r\n  const item = items.value[index];\r\n  if (item.editingName.trim() !== '') {\r\n    item.name = item.editingName;\r\n  }\r\n  item.editing = false;\r\n  item.showActions = false;\r\n\r\n  await saveItems(); // 수정된 후 백엔드에 저장\r\n};\r\n\r\nconst saveItems = async () => {\r\n  const content = items.value\r\n    .map((item) => `${item.name}: ${item.checked}`)\r\n    .join(', ');\r\n\r\n  const requestBody = {\r\n    type: 'CHECK',\r\n    content: content,\r\n  };\r\n\r\n  try {\r\n    const accessToken = getCookie('Authorization');\r\n    await axios.post(\r\n      `${process.env.VUE_APP_BASE_API}/api/v1/todo`,\r\n      requestBody,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error('Failed to save items:', error);\r\n  }\r\n};\r\n\r\n// 아이템 삭제 함수\r\nconst deleteItem = async (index: number) => {\r\n  items.value.splice(index, 1);\r\n  await saveItems(); // 삭제된 후 백엔드에 저장\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(items.value, (item, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: _normalizeClass(['list-content', { 'editing-active': item.editing }])\n        }, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(['list-check', { active: item.checked }]),\n            onClick: ($event: any) => (toggleCheck(index))\n          }, [\n            (item.checked)\n              ? (_openBlock(), _createBlock(_unref(Check1Icon), {\n                  key: 0,\n                  active: true,\n                  width: \"18px\",\n                  height: \"18px\"\n                }))\n              : _createCommentVNode(\"\", true)\n          ], 10, _hoisted_3),\n          (item.editing)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.editingName) = $event),\n                  type: \"text\",\n                  class: _normalizeClass([\r\n              'edit-item-input',\r\n              'transparent-input',\r\n              `edit-item-input-${index}`,\r\n            ]),\n                  onKeyup: _withKeys(($event: any) => (saveItem(index)), [\"enter\"]),\n                  onBlur: ($event: any) => (saveItem(index)),\n                  autofocus: \"\"\n                }, null, 42, _hoisted_5), [\n                  [_vModelText, item.editingName]\n                ])\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(item.name), 1)),\n          (!item.editing && !item.showActions)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 2,\n                class: \"menu-button\",\n                onClick: ($event: any) => (toggleActions(index))\n              }, _hoisted_9, 8, _hoisted_7))\n            : _createCommentVNode(\"\", true),\n          (item.showActions && !item.editing)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                _createElementVNode(\"button\", {\n                  onClick: _withModifiers(($event: any) => (editItem(index)), [\"stop\"]),\n                  class: \"edit-button\"\n                }, _hoisted_13, 8, _hoisted_11),\n                _createElementVNode(\"button\", {\n                  onClick: _withModifiers(($event: any) => (deleteItem(index)), [\"stop\"]),\n                  class: \"delete-button\"\n                }, _hoisted_16, 8, _hoisted_14)\n              ]))\n            : _createCommentVNode(\"\", true)\n        ], 2))\n      }), 128)),\n      (showInputField.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n            _hoisted_18,\n            _withDirectives(_createElementVNode(\"input\", {\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((newItem).value = $event)),\n              type: \"text\",\n              placeholder: \"새 항목 입력\",\n              onKeyup: _withKeys(addItem, [\"enter\"]),\n              class: \"add-item-input transparent-input\",\n              autofocus: \"\"\n            }, null, 544), [\n              [_vModelText, newItem.value]\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (!showInputField.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"add-list\",\n          onClick: _cache[1] || (_cache[1] = ($event: any) => (showInputField.value = true))\n        }, [\n          _createVNode(_unref(AddIcon)),\n          _hoisted_19\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"check-list-container\">\r\n    <div class=\"check-list\">\r\n      <!-- 기본 리스트 아이템 -->\r\n      <div\r\n        v-for=\"(item, index) in items\"\r\n        :key=\"index\"\r\n        :class=\"['list-content', { 'editing-active': item.editing }]\"\r\n      >\r\n        <div\r\n          :class=\"['list-check', { active: item.checked }]\"\r\n          @click=\"toggleCheck(index)\"\r\n        >\r\n          <Check1Icon\r\n            v-if=\"item.checked\"\r\n            :active=\"true\"\r\n            width=\"18px\"\r\n            height=\"18px\"\r\n          />\r\n        </div>\r\n\r\n        <!-- 항목 이름 또는 수정 중일 때 인풋 필드 -->\r\n        <div\r\n          v-if=\"item.editing\"\r\n          class=\"list-detail body1-regular\"\r\n        >\r\n          <input\r\n            v-model=\"item.editingName\"\r\n            type=\"text\"\r\n            :class=\"[\r\n              'edit-item-input',\r\n              'transparent-input',\r\n              `edit-item-input-${index}`,\r\n            ]\"\r\n            @keyup.enter=\"saveItem(index)\"\r\n            @blur=\"saveItem(index)\"\r\n            autofocus\r\n          />\r\n        </div>\r\n        <div\r\n          v-else\r\n          class=\"list-detail body1-regular\"\r\n        >\r\n          {{ item.name }}\r\n        </div>\r\n\r\n        <!-- 메뉴 버튼 -->\r\n        <div\r\n          class=\"menu-button\"\r\n          v-if=\"!item.editing && !item.showActions\"\r\n          @click=\"toggleActions(index)\"\r\n        >\r\n          <i class=\"fa-solid fa-ellipsis fa-2xs\"></i>\r\n        </div>\r\n\r\n        <!-- 액션 버튼들 -->\r\n        <div\r\n          v-if=\"item.showActions && !item.editing\"\r\n          class=\"action-buttons\"\r\n        >\r\n          <button\r\n            @click.stop=\"editItem(index)\"\r\n            class=\"edit-button\"\r\n          >\r\n            <img\r\n              src=\"@/components/icons/basic/Edit Icon.svg\"\r\n              alt=\"Edit\"\r\n              width=\"24px\"\r\n              height=\"24px\"\r\n            />\r\n          </button>\r\n          <button\r\n            @click.stop=\"deleteItem(index)\"\r\n            class=\"delete-button\"\r\n          >\r\n            <img\r\n              src=\"@/components/icons/basic/Delete Icon.svg\"\r\n              alt=\"Delete\"\r\n              width=\"24px\"\r\n              height=\"24px\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 항목 추가 인풋 필드 -->\r\n      <div\r\n        v-if=\"showInputField\"\r\n        class=\"list-content\"\r\n      >\r\n        <div class=\"list-check\"></div>\r\n        <input\r\n          v-model=\"newItem\"\r\n          type=\"text\"\r\n          placeholder=\"새 항목 입력\"\r\n          @keyup.enter=\"addItem\"\r\n          class=\"add-item-input transparent-input\"\r\n          autofocus\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- '항목 추가' 버튼 -->\r\n    <div\r\n      class=\"add-list\"\r\n      v-if=\"!showInputField\"\r\n      @click=\"showInputField = true\"\r\n    >\r\n      <AddIcon />\r\n      <div class=\"add-title body2-bold\">항목 추가</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { getCookie } from '@/utils/cookies';\r\nimport { Check1Icon, AddIcon } from '@/components';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport axios from 'axios';\r\n\r\n// 기본 리스트 아이템\r\nconst defaultItems = [\r\n  {\r\n    name: '등산화',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '모자',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '우비',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '배낭',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '생수',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '가벼운 구급약',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '랜턴',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '선글라스',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '간식',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n  {\r\n    name: '잠옷',\r\n    checked: false,\r\n    showActions: false,\r\n    editing: false,\r\n    editingName: '',\r\n  },\r\n];\r\n\r\nconst items = ref([...defaultItems]); // 백엔드에서 가져올 데이터를 저장할 변수\r\nconst newItem = ref('');\r\nconst showInputField = ref(false);\r\n\r\n// 체크 상태 토글 함수\r\nconst toggleCheck = async (index: number) => {\r\n  items.value[index].checked = !items.value[index].checked;\r\n  await saveItems();\r\n};\r\n\r\nonMounted(async () => {\r\n  try {\r\n    const accessToken = getCookie('Authorization');\r\n\r\n    const type = 'CHECK';\r\n\r\n    const response = await axios.get(\r\n      `${process.env.VUE_APP_BASE_API}/api/v1/todo`,\r\n      {\r\n        params: { type },\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    const latestItem = response.data.reduce(\r\n      (max, item) => (item.id > max.id ? item : max),\r\n      response.data[0]\r\n    );\r\n\r\n    if (latestItem !== null) {\r\n      const itemsArray = [];\r\n      const itemsList = latestItem.content.split(', ');\r\n\r\n      for (let i = 0; i < itemsList.length; i++) {\r\n        const item = itemsList[i];\r\n        const [name, checked] = item.split(': ');\r\n\r\n        itemsArray.push({\r\n          name: name.trim(),\r\n          checked: checked === 'true',\r\n          showActions: false,\r\n          editing: false,\r\n          editingName: '',\r\n        });\r\n      }\r\n\r\n      items.value = itemsArray;\r\n    } else {\r\n      items.value = [...defaultItems];\r\n    }\r\n  } catch (error) {\r\n    items.value = [...defaultItems];\r\n  }\r\n});\r\n\r\n// 항목 추가 함수\r\nconst addItem = async () => {\r\n  if (newItem.value.trim() !== '') {\r\n    const newItemData = {\r\n      name: newItem.value,\r\n      checked: false,\r\n      showActions: false,\r\n      editing: false,\r\n      editingName: '',\r\n    };\r\n    items.value.push(newItemData);\r\n\r\n    await saveItems(); // 추가된 후 백엔드에 저장\r\n\r\n    newItem.value = '';\r\n    showInputField.value = false;\r\n  }\r\n};\r\n\r\n// 액션 토글 함수\r\nconst toggleActions = (index: number) => {\r\n  items.value.forEach((item, i) => {\r\n    if (i !== index) item.showActions = false;\r\n  });\r\n\r\n  items.value[index].showActions = !items.value[index].showActions;\r\n};\r\n\r\n// 아이템 수정 함수\r\nconst editItem = (index: number) => {\r\n  const item = items.value[index];\r\n  item.editingName = item.name; // 현재 이름을 수정할 이름으로 설정\r\n  item.editing = true;\r\n  item.showActions = false; // 액션 버튼 숨기기\r\n\r\n  setTimeout(() => {\r\n    const input = document.querySelector(\r\n      `.edit-item-input-${index}`\r\n    ) as HTMLInputElement;\r\n    if (input) {\r\n      input.focus();\r\n    }\r\n  }, 0);\r\n};\r\n\r\n// 아이템 저장 함수\r\nconst saveItem = async (index: number) => {\r\n  const item = items.value[index];\r\n  if (item.editingName.trim() !== '') {\r\n    item.name = item.editingName;\r\n  }\r\n  item.editing = false;\r\n  item.showActions = false;\r\n\r\n  await saveItems(); // 수정된 후 백엔드에 저장\r\n};\r\n\r\nconst saveItems = async () => {\r\n  const content = items.value\r\n    .map((item) => `${item.name}: ${item.checked}`)\r\n    .join(', ');\r\n\r\n  const requestBody = {\r\n    type: 'CHECK',\r\n    content: content,\r\n  };\r\n\r\n  try {\r\n    const accessToken = getCookie('Authorization');\r\n    await axios.post(\r\n      `${process.env.VUE_APP_BASE_API}/api/v1/todo`,\r\n      requestBody,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error('Failed to save items:', error);\r\n  }\r\n};\r\n\r\n// 아이템 삭제 함수\r\nconst deleteItem = async (index: number) => {\r\n  items.value.splice(index, 1);\r\n  await saveItems(); // 삭제된 후 백엔드에 저장\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.check-list-container {\r\n  padding: 20px 20px 0px 20px;\r\n  position: relative;\r\n}\r\n\r\n.check-list {\r\n  border-radius: var(--radius-s);\r\n  background-color: var(--color-card-surface);\r\n}\r\n\r\n.list-check {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: var(--color-neutral-700);\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.list-check.active {\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  border-color: var(--color-green-500);\r\n}\r\n\r\n.list-content {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 52px;\r\n  padding: var(--margin-s) var(--margin-m2);\r\n  gap: 16px;\r\n  position: relative;\r\n}\r\n\r\n.list-detail {\r\n  color: var(--color-text-active);\r\n  flex-grow: 1;\r\n}\r\n\r\n.transparent-input {\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  color: var(--color-text-active);\r\n  font-size: 1.5rem;\r\n  width: 100%;\r\n}\r\n\r\n.edit-item-input {\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  color: var(--color-text-active);\r\n  font-size: 1.5rem;\r\n  font-family: inherit; /* 기존 폰트 스타일과 일치 */\r\n}\r\n\r\n.menu-button {\r\n  cursor: pointer;\r\n  font-size: 3rem; /* 크기를 키움 */\r\n  padding: 0 10px;\r\n  color: var(--color-neutral-700);\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 10px; /* 간격 조정 */\r\n}\r\n\r\n.edit-button,\r\n.delete-button {\r\n  background-color: #333333;\r\n  border: none;\r\n  margin-top: 15px;\r\n  color: var(--color-button-on-primary);\r\n  padding: 3px 10px; /* 크기 조정 */\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  font-size: 1.2rem; /* 폰트 크기 조정 */\r\n}\r\n\r\n.add-list {\r\n  padding: var(--padding-m);\r\n  border-radius: var(--radius-xl);\r\n  gap: var(--spacing-1);\r\n  background-color: var(--color-button-primary);\r\n  width: 11.2rem;\r\n  height: 4rem;\r\n  left: 100%;\r\n  bottom: 10px;\r\n  margin-top: 10px;\r\n  position: sticky;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.editing-active {\r\n  background-color: #1b1b1b; /* 더 진한 배경색 */\r\n  font-weight: bold; /* 글자를 굵게 */\r\n}\r\n</style>\r\n","import script from \"./CheckList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CheckList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./CheckList.vue?vue&type=style&index=0&id=885e6682&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-885e6682\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_createElementVNode","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","src","_imports_0","alt","width","height","_hoisted_13","_hoisted_14","_hoisted_15","_imports_1","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_defineComponent","__name","setup","__props","defaultItems","name","checked","showActions","editing","editingName","items","ref","newItem","showInputField","toggleCheck","async","value","index","saveItems","onMounted","accessToken","getCookie","type","response","axios","get","params","headers","Authorization","latestItem","data","reduce","max","item","id","itemsArray","itemsList","content","split","i","length","push","trim","error","addItem","newItemData","toggleActions","forEach","editItem","setTimeout","input","document","querySelector","focus","saveItem","map","join","requestBody","post","console","deleteItem","splice","_ctx","_cache","_openBlock","_createElementBlock","_Fragment","_renderList","_normalizeClass","active","onClick","$event","_createBlock","_unref","Check1Icon","_createCommentVNode","_withDirectives","onKeyup","_withKeys","onBlur","autofocus","_vModelText","_toDisplayString","_withModifiers","placeholder","_createVNode","AddIcon","__exports__"],"sourceRoot":""}